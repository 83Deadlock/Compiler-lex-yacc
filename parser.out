Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> Main Funcoes
Rule 2     Main -> FUNC MAIN { Declaracoes Instrucoes }
Rule 3     Funcoes -> Funcoes Funcao
Rule 4     Funcoes -> <empty>
Rule 5     Funcao -> FUNC NAME { Instrucoes }
Rule 6     Declaracoes -> DECL { Decls }
Rule 7     Decls -> Decls Decl
Rule 8     Decls -> <empty>
Rule 9     Decl -> INT ID ;
Rule 10    Decl -> INT ID ATRIB ExpCond ;
Rule 11    Instrucoes -> INST { Insts }
Rule 12    Insts -> Insts Inst
Rule 13    Insts -> <empty>
Rule 14    Inst -> PRINT LPAR Log RPAR ;
Rule 15    Inst -> READ LPAR ID RPAR ;
Rule 16    Inst -> ID ATRIB ExpCond ;
Rule 17    Inst -> IF LPAR Log RPAR { Insts }
Rule 18    Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts }
Rule 19    Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR
Rule 20    Log -> NOT Log
Rule 21    Log -> Log AND FactCond
Rule 22    Log -> Log OR FactCond
Rule 23    Log -> FactCond
Rule 24    FactCond -> FactCond LEQ ExpCond
Rule 25    FactCond -> FactCond LES ExpCond
Rule 26    FactCond -> FactCond GEQ ExpCond
Rule 27    FactCond -> FactCond GRE ExpCond
Rule 28    FactCond -> FactCond EQ ExpCond
Rule 29    FactCond -> FactCond DIF ExpCond
Rule 30    FactCond -> ExpCond
Rule 31    ExpCond -> ExpCond ADD TermoCond
Rule 32    ExpCond -> ExpCond SUB TermoCond
Rule 33    ExpCond -> TermoCond
Rule 34    TermoCond -> TermoCond MUL FactorCond
Rule 35    TermoCond -> TermoCond DIV FactorCond
Rule 36    TermoCond -> TermoCond MOD FactorCond
Rule 37    TermoCond -> FactorCond
Rule 38    FactorCond -> LPAR Log RPAR
Rule 39    FactorCond -> NUM
Rule 40    FactorCond -> ID

Terminals, with rules where they appear

;                    : 9 10 14 15 16
ADD                  : 31
AND                  : 21
ATRIB                : 10 16
DECL                 : 6
DIF                  : 29
DIV                  : 35
ELSE                 : 18
EQ                   : 28
FUNC                 : 2 5
GEQ                  : 26
GRE                  : 27
ID                   : 9 10 15 16 40
IF                   : 17 18
INST                 : 11
INT                  : 9 10
LEQ                  : 24
LES                  : 25
LPAR                 : 14 15 17 18 19 38
MAIN                 : 2
MOD                  : 36
MUL                  : 34
NAME                 : 5
NOT                  : 20
NUM                  : 39
OR                   : 22
PRINT                : 14
READ                 : 15
REPEAT               : 19
RPAR                 : 14 15 17 18 19 38
SUB                  : 32
UNTIL                : 19
error                : 
{                    : 2 5 6 11 17 18 18 19
}                    : 2 5 6 11 17 18 18 19

Nonterminals, with rules where they appear

Decl                 : 7
Declaracoes          : 2
Decls                : 6 7
ExpCond              : 10 16 24 25 26 27 28 29 30 31 32
FactCond             : 21 22 23 24 25 26 27 28 29
FactorCond           : 34 35 36 37
Funcao               : 3
Funcoes              : 1 3
Inst                 : 12
Instrucoes           : 2 5
Insts                : 11 12 17 18 18 19
Log                  : 14 17 18 19 20 21 22 38
Main                 : 1
Programa             : 0
TermoCond            : 31 32 33 34 35 36

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . Main Funcoes
    (2) Main -> . FUNC MAIN { Declaracoes Instrucoes }

    FUNC            shift and go to state 3

    Programa                       shift and go to state 1
    Main                           shift and go to state 2

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> Main . Funcoes
    (3) Funcoes -> . Funcoes Funcao
    (4) Funcoes -> .

    FUNC            reduce using rule 4 (Funcoes -> .)
    $end            reduce using rule 4 (Funcoes -> .)

    Funcoes                        shift and go to state 4

state 3

    (2) Main -> FUNC . MAIN { Declaracoes Instrucoes }

    MAIN            shift and go to state 5


state 4

    (1) Programa -> Main Funcoes .
    (3) Funcoes -> Funcoes . Funcao
    (5) Funcao -> . FUNC NAME { Instrucoes }

    $end            reduce using rule 1 (Programa -> Main Funcoes .)
    FUNC            shift and go to state 7

    Funcao                         shift and go to state 6

state 5

    (2) Main -> FUNC MAIN . { Declaracoes Instrucoes }

    {               shift and go to state 8


state 6

    (3) Funcoes -> Funcoes Funcao .

    FUNC            reduce using rule 3 (Funcoes -> Funcoes Funcao .)
    $end            reduce using rule 3 (Funcoes -> Funcoes Funcao .)


state 7

    (5) Funcao -> FUNC . NAME { Instrucoes }

    NAME            shift and go to state 9


state 8

    (2) Main -> FUNC MAIN { . Declaracoes Instrucoes }
    (6) Declaracoes -> . DECL { Decls }

    DECL            shift and go to state 11

    Declaracoes                    shift and go to state 10

state 9

    (5) Funcao -> FUNC NAME . { Instrucoes }

    {               shift and go to state 12


state 10

    (2) Main -> FUNC MAIN { Declaracoes . Instrucoes }
    (11) Instrucoes -> . INST { Insts }

    INST            shift and go to state 14

    Instrucoes                     shift and go to state 13

state 11

    (6) Declaracoes -> DECL . { Decls }

    {               shift and go to state 15


state 12

    (5) Funcao -> FUNC NAME { . Instrucoes }
    (11) Instrucoes -> . INST { Insts }

    INST            shift and go to state 14

    Instrucoes                     shift and go to state 16

state 13

    (2) Main -> FUNC MAIN { Declaracoes Instrucoes . }

    }               shift and go to state 17


state 14

    (11) Instrucoes -> INST . { Insts }

    {               shift and go to state 18


state 15

    (6) Declaracoes -> DECL { . Decls }
    (7) Decls -> . Decls Decl
    (8) Decls -> .

    }               reduce using rule 8 (Decls -> .)
    INT             reduce using rule 8 (Decls -> .)

    Decls                          shift and go to state 19

state 16

    (5) Funcao -> FUNC NAME { Instrucoes . }

    }               shift and go to state 20


state 17

    (2) Main -> FUNC MAIN { Declaracoes Instrucoes } .

    FUNC            reduce using rule 2 (Main -> FUNC MAIN { Declaracoes Instrucoes } .)
    $end            reduce using rule 2 (Main -> FUNC MAIN { Declaracoes Instrucoes } .)


state 18

    (11) Instrucoes -> INST { . Insts }
    (12) Insts -> . Insts Inst
    (13) Insts -> .

    }               reduce using rule 13 (Insts -> .)
    PRINT           reduce using rule 13 (Insts -> .)
    READ            reduce using rule 13 (Insts -> .)
    ID              reduce using rule 13 (Insts -> .)
    IF              reduce using rule 13 (Insts -> .)
    REPEAT          reduce using rule 13 (Insts -> .)

    Insts                          shift and go to state 21

state 19

    (6) Declaracoes -> DECL { Decls . }
    (7) Decls -> Decls . Decl
    (9) Decl -> . INT ID ;
    (10) Decl -> . INT ID ATRIB ExpCond ;

    }               shift and go to state 22
    INT             shift and go to state 24

    Decl                           shift and go to state 23

state 20

    (5) Funcao -> FUNC NAME { Instrucoes } .

    FUNC            reduce using rule 5 (Funcao -> FUNC NAME { Instrucoes } .)
    $end            reduce using rule 5 (Funcao -> FUNC NAME { Instrucoes } .)


state 21

    (11) Instrucoes -> INST { Insts . }
    (12) Insts -> Insts . Inst
    (14) Inst -> . PRINT LPAR Log RPAR ;
    (15) Inst -> . READ LPAR ID RPAR ;
    (16) Inst -> . ID ATRIB ExpCond ;
    (17) Inst -> . IF LPAR Log RPAR { Insts }
    (18) Inst -> . IF LPAR Log RPAR { Insts } ELSE { Insts }
    (19) Inst -> . REPEAT { Insts } UNTIL LPAR Log RPAR

    }               shift and go to state 25
    PRINT           shift and go to state 27
    READ            shift and go to state 28
    ID              shift and go to state 29
    IF              shift and go to state 30
    REPEAT          shift and go to state 31

    Inst                           shift and go to state 26

state 22

    (6) Declaracoes -> DECL { Decls } .

    INST            reduce using rule 6 (Declaracoes -> DECL { Decls } .)


state 23

    (7) Decls -> Decls Decl .

    }               reduce using rule 7 (Decls -> Decls Decl .)
    INT             reduce using rule 7 (Decls -> Decls Decl .)


state 24

    (9) Decl -> INT . ID ;
    (10) Decl -> INT . ID ATRIB ExpCond ;

    ID              shift and go to state 32


state 25

    (11) Instrucoes -> INST { Insts } .

    }               reduce using rule 11 (Instrucoes -> INST { Insts } .)


state 26

    (12) Insts -> Insts Inst .

    }               reduce using rule 12 (Insts -> Insts Inst .)
    PRINT           reduce using rule 12 (Insts -> Insts Inst .)
    READ            reduce using rule 12 (Insts -> Insts Inst .)
    ID              reduce using rule 12 (Insts -> Insts Inst .)
    IF              reduce using rule 12 (Insts -> Insts Inst .)
    REPEAT          reduce using rule 12 (Insts -> Insts Inst .)


state 27

    (14) Inst -> PRINT . LPAR Log RPAR ;

    LPAR            shift and go to state 33


state 28

    (15) Inst -> READ . LPAR ID RPAR ;

    LPAR            shift and go to state 34


state 29

    (16) Inst -> ID . ATRIB ExpCond ;

    ATRIB           shift and go to state 35


state 30

    (17) Inst -> IF . LPAR Log RPAR { Insts }
    (18) Inst -> IF . LPAR Log RPAR { Insts } ELSE { Insts }

    LPAR            shift and go to state 36


state 31

    (19) Inst -> REPEAT . { Insts } UNTIL LPAR Log RPAR

    {               shift and go to state 37


state 32

    (9) Decl -> INT ID . ;
    (10) Decl -> INT ID . ATRIB ExpCond ;

    ;               shift and go to state 38
    ATRIB           shift and go to state 39


state 33

    (14) Inst -> PRINT LPAR . Log RPAR ;
    (20) Log -> . NOT Log
    (21) Log -> . Log AND FactCond
    (22) Log -> . Log OR FactCond
    (23) Log -> . FactCond
    (24) FactCond -> . FactCond LEQ ExpCond
    (25) FactCond -> . FactCond LES ExpCond
    (26) FactCond -> . FactCond GEQ ExpCond
    (27) FactCond -> . FactCond GRE ExpCond
    (28) FactCond -> . FactCond EQ ExpCond
    (29) FactCond -> . FactCond DIF ExpCond
    (30) FactCond -> . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    NOT             shift and go to state 42
    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    Log                            shift and go to state 41
    FactCond                       shift and go to state 43
    ExpCond                        shift and go to state 44
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 34

    (15) Inst -> READ LPAR . ID RPAR ;

    ID              shift and go to state 49


state 35

    (16) Inst -> ID ATRIB . ExpCond ;
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    ExpCond                        shift and go to state 50
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 36

    (17) Inst -> IF LPAR . Log RPAR { Insts }
    (18) Inst -> IF LPAR . Log RPAR { Insts } ELSE { Insts }
    (20) Log -> . NOT Log
    (21) Log -> . Log AND FactCond
    (22) Log -> . Log OR FactCond
    (23) Log -> . FactCond
    (24) FactCond -> . FactCond LEQ ExpCond
    (25) FactCond -> . FactCond LES ExpCond
    (26) FactCond -> . FactCond GEQ ExpCond
    (27) FactCond -> . FactCond GRE ExpCond
    (28) FactCond -> . FactCond EQ ExpCond
    (29) FactCond -> . FactCond DIF ExpCond
    (30) FactCond -> . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    NOT             shift and go to state 42
    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    Log                            shift and go to state 51
    FactCond                       shift and go to state 43
    ExpCond                        shift and go to state 44
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 37

    (19) Inst -> REPEAT { . Insts } UNTIL LPAR Log RPAR
    (12) Insts -> . Insts Inst
    (13) Insts -> .

    }               reduce using rule 13 (Insts -> .)
    PRINT           reduce using rule 13 (Insts -> .)
    READ            reduce using rule 13 (Insts -> .)
    ID              reduce using rule 13 (Insts -> .)
    IF              reduce using rule 13 (Insts -> .)
    REPEAT          reduce using rule 13 (Insts -> .)

    Insts                          shift and go to state 52

state 38

    (9) Decl -> INT ID ; .

    }               reduce using rule 9 (Decl -> INT ID ; .)
    INT             reduce using rule 9 (Decl -> INT ID ; .)


state 39

    (10) Decl -> INT ID ATRIB . ExpCond ;
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    ExpCond                        shift and go to state 53
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 40

    (38) FactorCond -> LPAR . Log RPAR
    (20) Log -> . NOT Log
    (21) Log -> . Log AND FactCond
    (22) Log -> . Log OR FactCond
    (23) Log -> . FactCond
    (24) FactCond -> . FactCond LEQ ExpCond
    (25) FactCond -> . FactCond LES ExpCond
    (26) FactCond -> . FactCond GEQ ExpCond
    (27) FactCond -> . FactCond GRE ExpCond
    (28) FactCond -> . FactCond EQ ExpCond
    (29) FactCond -> . FactCond DIF ExpCond
    (30) FactCond -> . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    NOT             shift and go to state 42
    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    Log                            shift and go to state 54
    FactCond                       shift and go to state 43
    ExpCond                        shift and go to state 44
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 41

    (14) Inst -> PRINT LPAR Log . RPAR ;
    (21) Log -> Log . AND FactCond
    (22) Log -> Log . OR FactCond

    RPAR            shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 42

    (20) Log -> NOT . Log
    (20) Log -> . NOT Log
    (21) Log -> . Log AND FactCond
    (22) Log -> . Log OR FactCond
    (23) Log -> . FactCond
    (24) FactCond -> . FactCond LEQ ExpCond
    (25) FactCond -> . FactCond LES ExpCond
    (26) FactCond -> . FactCond GEQ ExpCond
    (27) FactCond -> . FactCond GRE ExpCond
    (28) FactCond -> . FactCond EQ ExpCond
    (29) FactCond -> . FactCond DIF ExpCond
    (30) FactCond -> . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    NOT             shift and go to state 42
    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    Log                            shift and go to state 58
    FactCond                       shift and go to state 43
    ExpCond                        shift and go to state 44
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 43

    (23) Log -> FactCond .
    (24) FactCond -> FactCond . LEQ ExpCond
    (25) FactCond -> FactCond . LES ExpCond
    (26) FactCond -> FactCond . GEQ ExpCond
    (27) FactCond -> FactCond . GRE ExpCond
    (28) FactCond -> FactCond . EQ ExpCond
    (29) FactCond -> FactCond . DIF ExpCond

    RPAR            reduce using rule 23 (Log -> FactCond .)
    AND             reduce using rule 23 (Log -> FactCond .)
    OR              reduce using rule 23 (Log -> FactCond .)
    LEQ             shift and go to state 59
    LES             shift and go to state 60
    GEQ             shift and go to state 61
    GRE             shift and go to state 62
    EQ              shift and go to state 63
    DIF             shift and go to state 64


state 44

    (30) FactCond -> ExpCond .
    (31) ExpCond -> ExpCond . ADD TermoCond
    (32) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 30 (FactCond -> ExpCond .)
    LES             reduce using rule 30 (FactCond -> ExpCond .)
    GEQ             reduce using rule 30 (FactCond -> ExpCond .)
    GRE             reduce using rule 30 (FactCond -> ExpCond .)
    EQ              reduce using rule 30 (FactCond -> ExpCond .)
    DIF             reduce using rule 30 (FactCond -> ExpCond .)
    RPAR            reduce using rule 30 (FactCond -> ExpCond .)
    AND             reduce using rule 30 (FactCond -> ExpCond .)
    OR              reduce using rule 30 (FactCond -> ExpCond .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66


state 45

    (33) ExpCond -> TermoCond .
    (34) TermoCond -> TermoCond . MUL FactorCond
    (35) TermoCond -> TermoCond . DIV FactorCond
    (36) TermoCond -> TermoCond . MOD FactorCond

    ADD             reduce using rule 33 (ExpCond -> TermoCond .)
    SUB             reduce using rule 33 (ExpCond -> TermoCond .)
    LEQ             reduce using rule 33 (ExpCond -> TermoCond .)
    LES             reduce using rule 33 (ExpCond -> TermoCond .)
    GEQ             reduce using rule 33 (ExpCond -> TermoCond .)
    GRE             reduce using rule 33 (ExpCond -> TermoCond .)
    EQ              reduce using rule 33 (ExpCond -> TermoCond .)
    DIF             reduce using rule 33 (ExpCond -> TermoCond .)
    RPAR            reduce using rule 33 (ExpCond -> TermoCond .)
    AND             reduce using rule 33 (ExpCond -> TermoCond .)
    OR              reduce using rule 33 (ExpCond -> TermoCond .)
    ;               reduce using rule 33 (ExpCond -> TermoCond .)
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    MOD             shift and go to state 69


state 46

    (37) TermoCond -> FactorCond .

    MUL             reduce using rule 37 (TermoCond -> FactorCond .)
    DIV             reduce using rule 37 (TermoCond -> FactorCond .)
    MOD             reduce using rule 37 (TermoCond -> FactorCond .)
    ADD             reduce using rule 37 (TermoCond -> FactorCond .)
    SUB             reduce using rule 37 (TermoCond -> FactorCond .)
    LEQ             reduce using rule 37 (TermoCond -> FactorCond .)
    LES             reduce using rule 37 (TermoCond -> FactorCond .)
    GEQ             reduce using rule 37 (TermoCond -> FactorCond .)
    GRE             reduce using rule 37 (TermoCond -> FactorCond .)
    EQ              reduce using rule 37 (TermoCond -> FactorCond .)
    DIF             reduce using rule 37 (TermoCond -> FactorCond .)
    RPAR            reduce using rule 37 (TermoCond -> FactorCond .)
    AND             reduce using rule 37 (TermoCond -> FactorCond .)
    OR              reduce using rule 37 (TermoCond -> FactorCond .)
    ;               reduce using rule 37 (TermoCond -> FactorCond .)


state 47

    (39) FactorCond -> NUM .

    MUL             reduce using rule 39 (FactorCond -> NUM .)
    DIV             reduce using rule 39 (FactorCond -> NUM .)
    MOD             reduce using rule 39 (FactorCond -> NUM .)
    ADD             reduce using rule 39 (FactorCond -> NUM .)
    SUB             reduce using rule 39 (FactorCond -> NUM .)
    LEQ             reduce using rule 39 (FactorCond -> NUM .)
    LES             reduce using rule 39 (FactorCond -> NUM .)
    GEQ             reduce using rule 39 (FactorCond -> NUM .)
    GRE             reduce using rule 39 (FactorCond -> NUM .)
    EQ              reduce using rule 39 (FactorCond -> NUM .)
    DIF             reduce using rule 39 (FactorCond -> NUM .)
    RPAR            reduce using rule 39 (FactorCond -> NUM .)
    AND             reduce using rule 39 (FactorCond -> NUM .)
    OR              reduce using rule 39 (FactorCond -> NUM .)
    ;               reduce using rule 39 (FactorCond -> NUM .)


state 48

    (40) FactorCond -> ID .

    MUL             reduce using rule 40 (FactorCond -> ID .)
    DIV             reduce using rule 40 (FactorCond -> ID .)
    MOD             reduce using rule 40 (FactorCond -> ID .)
    ADD             reduce using rule 40 (FactorCond -> ID .)
    SUB             reduce using rule 40 (FactorCond -> ID .)
    LEQ             reduce using rule 40 (FactorCond -> ID .)
    LES             reduce using rule 40 (FactorCond -> ID .)
    GEQ             reduce using rule 40 (FactorCond -> ID .)
    GRE             reduce using rule 40 (FactorCond -> ID .)
    EQ              reduce using rule 40 (FactorCond -> ID .)
    DIF             reduce using rule 40 (FactorCond -> ID .)
    RPAR            reduce using rule 40 (FactorCond -> ID .)
    AND             reduce using rule 40 (FactorCond -> ID .)
    OR              reduce using rule 40 (FactorCond -> ID .)
    ;               reduce using rule 40 (FactorCond -> ID .)


state 49

    (15) Inst -> READ LPAR ID . RPAR ;

    RPAR            shift and go to state 70


state 50

    (16) Inst -> ID ATRIB ExpCond . ;
    (31) ExpCond -> ExpCond . ADD TermoCond
    (32) ExpCond -> ExpCond . SUB TermoCond

    ;               shift and go to state 71
    ADD             shift and go to state 65
    SUB             shift and go to state 66


state 51

    (17) Inst -> IF LPAR Log . RPAR { Insts }
    (18) Inst -> IF LPAR Log . RPAR { Insts } ELSE { Insts }
    (21) Log -> Log . AND FactCond
    (22) Log -> Log . OR FactCond

    RPAR            shift and go to state 72
    AND             shift and go to state 56
    OR              shift and go to state 57


state 52

    (19) Inst -> REPEAT { Insts . } UNTIL LPAR Log RPAR
    (12) Insts -> Insts . Inst
    (14) Inst -> . PRINT LPAR Log RPAR ;
    (15) Inst -> . READ LPAR ID RPAR ;
    (16) Inst -> . ID ATRIB ExpCond ;
    (17) Inst -> . IF LPAR Log RPAR { Insts }
    (18) Inst -> . IF LPAR Log RPAR { Insts } ELSE { Insts }
    (19) Inst -> . REPEAT { Insts } UNTIL LPAR Log RPAR

    }               shift and go to state 73
    PRINT           shift and go to state 27
    READ            shift and go to state 28
    ID              shift and go to state 29
    IF              shift and go to state 30
    REPEAT          shift and go to state 31

    Inst                           shift and go to state 26

state 53

    (10) Decl -> INT ID ATRIB ExpCond . ;
    (31) ExpCond -> ExpCond . ADD TermoCond
    (32) ExpCond -> ExpCond . SUB TermoCond

    ;               shift and go to state 74
    ADD             shift and go to state 65
    SUB             shift and go to state 66


state 54

    (38) FactorCond -> LPAR Log . RPAR
    (21) Log -> Log . AND FactCond
    (22) Log -> Log . OR FactCond

    RPAR            shift and go to state 75
    AND             shift and go to state 56
    OR              shift and go to state 57


state 55

    (14) Inst -> PRINT LPAR Log RPAR . ;

    ;               shift and go to state 76


state 56

    (21) Log -> Log AND . FactCond
    (24) FactCond -> . FactCond LEQ ExpCond
    (25) FactCond -> . FactCond LES ExpCond
    (26) FactCond -> . FactCond GEQ ExpCond
    (27) FactCond -> . FactCond GRE ExpCond
    (28) FactCond -> . FactCond EQ ExpCond
    (29) FactCond -> . FactCond DIF ExpCond
    (30) FactCond -> . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    FactCond                       shift and go to state 77
    ExpCond                        shift and go to state 44
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 57

    (22) Log -> Log OR . FactCond
    (24) FactCond -> . FactCond LEQ ExpCond
    (25) FactCond -> . FactCond LES ExpCond
    (26) FactCond -> . FactCond GEQ ExpCond
    (27) FactCond -> . FactCond GRE ExpCond
    (28) FactCond -> . FactCond EQ ExpCond
    (29) FactCond -> . FactCond DIF ExpCond
    (30) FactCond -> . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    FactCond                       shift and go to state 78
    ExpCond                        shift and go to state 44
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 58

    (20) Log -> NOT Log .
    (21) Log -> Log . AND FactCond
    (22) Log -> Log . OR FactCond

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAR            reduce using rule 20 (Log -> NOT Log .)
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! AND             [ reduce using rule 20 (Log -> NOT Log .) ]
  ! OR              [ reduce using rule 20 (Log -> NOT Log .) ]


state 59

    (24) FactCond -> FactCond LEQ . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    ExpCond                        shift and go to state 79
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 60

    (25) FactCond -> FactCond LES . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    ExpCond                        shift and go to state 80
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 61

    (26) FactCond -> FactCond GEQ . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    ExpCond                        shift and go to state 81
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 62

    (27) FactCond -> FactCond GRE . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    ExpCond                        shift and go to state 82
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 63

    (28) FactCond -> FactCond EQ . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    ExpCond                        shift and go to state 83
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 64

    (29) FactCond -> FactCond DIF . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    ExpCond                        shift and go to state 84
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 65

    (31) ExpCond -> ExpCond ADD . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    TermoCond                      shift and go to state 85
    FactorCond                     shift and go to state 46

state 66

    (32) ExpCond -> ExpCond SUB . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    TermoCond                      shift and go to state 86
    FactorCond                     shift and go to state 46

state 67

    (34) TermoCond -> TermoCond MUL . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    FactorCond                     shift and go to state 87

state 68

    (35) TermoCond -> TermoCond DIV . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    FactorCond                     shift and go to state 88

state 69

    (36) TermoCond -> TermoCond MOD . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    FactorCond                     shift and go to state 89

state 70

    (15) Inst -> READ LPAR ID RPAR . ;

    ;               shift and go to state 90


state 71

    (16) Inst -> ID ATRIB ExpCond ; .

    }               reduce using rule 16 (Inst -> ID ATRIB ExpCond ; .)
    PRINT           reduce using rule 16 (Inst -> ID ATRIB ExpCond ; .)
    READ            reduce using rule 16 (Inst -> ID ATRIB ExpCond ; .)
    ID              reduce using rule 16 (Inst -> ID ATRIB ExpCond ; .)
    IF              reduce using rule 16 (Inst -> ID ATRIB ExpCond ; .)
    REPEAT          reduce using rule 16 (Inst -> ID ATRIB ExpCond ; .)


state 72

    (17) Inst -> IF LPAR Log RPAR . { Insts }
    (18) Inst -> IF LPAR Log RPAR . { Insts } ELSE { Insts }

    {               shift and go to state 91


state 73

    (19) Inst -> REPEAT { Insts } . UNTIL LPAR Log RPAR

    UNTIL           shift and go to state 92


state 74

    (10) Decl -> INT ID ATRIB ExpCond ; .

    }               reduce using rule 10 (Decl -> INT ID ATRIB ExpCond ; .)
    INT             reduce using rule 10 (Decl -> INT ID ATRIB ExpCond ; .)


state 75

    (38) FactorCond -> LPAR Log RPAR .

    MUL             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    DIV             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    MOD             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    ADD             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    SUB             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    LEQ             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    LES             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    GEQ             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    GRE             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    EQ              reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    DIF             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    RPAR            reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    AND             reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    OR              reduce using rule 38 (FactorCond -> LPAR Log RPAR .)
    ;               reduce using rule 38 (FactorCond -> LPAR Log RPAR .)


state 76

    (14) Inst -> PRINT LPAR Log RPAR ; .

    }               reduce using rule 14 (Inst -> PRINT LPAR Log RPAR ; .)
    PRINT           reduce using rule 14 (Inst -> PRINT LPAR Log RPAR ; .)
    READ            reduce using rule 14 (Inst -> PRINT LPAR Log RPAR ; .)
    ID              reduce using rule 14 (Inst -> PRINT LPAR Log RPAR ; .)
    IF              reduce using rule 14 (Inst -> PRINT LPAR Log RPAR ; .)
    REPEAT          reduce using rule 14 (Inst -> PRINT LPAR Log RPAR ; .)


state 77

    (21) Log -> Log AND FactCond .
    (24) FactCond -> FactCond . LEQ ExpCond
    (25) FactCond -> FactCond . LES ExpCond
    (26) FactCond -> FactCond . GEQ ExpCond
    (27) FactCond -> FactCond . GRE ExpCond
    (28) FactCond -> FactCond . EQ ExpCond
    (29) FactCond -> FactCond . DIF ExpCond

    RPAR            reduce using rule 21 (Log -> Log AND FactCond .)
    AND             reduce using rule 21 (Log -> Log AND FactCond .)
    OR              reduce using rule 21 (Log -> Log AND FactCond .)
    LEQ             shift and go to state 59
    LES             shift and go to state 60
    GEQ             shift and go to state 61
    GRE             shift and go to state 62
    EQ              shift and go to state 63
    DIF             shift and go to state 64


state 78

    (22) Log -> Log OR FactCond .
    (24) FactCond -> FactCond . LEQ ExpCond
    (25) FactCond -> FactCond . LES ExpCond
    (26) FactCond -> FactCond . GEQ ExpCond
    (27) FactCond -> FactCond . GRE ExpCond
    (28) FactCond -> FactCond . EQ ExpCond
    (29) FactCond -> FactCond . DIF ExpCond

    RPAR            reduce using rule 22 (Log -> Log OR FactCond .)
    AND             reduce using rule 22 (Log -> Log OR FactCond .)
    OR              reduce using rule 22 (Log -> Log OR FactCond .)
    LEQ             shift and go to state 59
    LES             shift and go to state 60
    GEQ             shift and go to state 61
    GRE             shift and go to state 62
    EQ              shift and go to state 63
    DIF             shift and go to state 64


state 79

    (24) FactCond -> FactCond LEQ ExpCond .
    (31) ExpCond -> ExpCond . ADD TermoCond
    (32) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 24 (FactCond -> FactCond LEQ ExpCond .)
    LES             reduce using rule 24 (FactCond -> FactCond LEQ ExpCond .)
    GEQ             reduce using rule 24 (FactCond -> FactCond LEQ ExpCond .)
    GRE             reduce using rule 24 (FactCond -> FactCond LEQ ExpCond .)
    EQ              reduce using rule 24 (FactCond -> FactCond LEQ ExpCond .)
    DIF             reduce using rule 24 (FactCond -> FactCond LEQ ExpCond .)
    RPAR            reduce using rule 24 (FactCond -> FactCond LEQ ExpCond .)
    AND             reduce using rule 24 (FactCond -> FactCond LEQ ExpCond .)
    OR              reduce using rule 24 (FactCond -> FactCond LEQ ExpCond .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66


state 80

    (25) FactCond -> FactCond LES ExpCond .
    (31) ExpCond -> ExpCond . ADD TermoCond
    (32) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 25 (FactCond -> FactCond LES ExpCond .)
    LES             reduce using rule 25 (FactCond -> FactCond LES ExpCond .)
    GEQ             reduce using rule 25 (FactCond -> FactCond LES ExpCond .)
    GRE             reduce using rule 25 (FactCond -> FactCond LES ExpCond .)
    EQ              reduce using rule 25 (FactCond -> FactCond LES ExpCond .)
    DIF             reduce using rule 25 (FactCond -> FactCond LES ExpCond .)
    RPAR            reduce using rule 25 (FactCond -> FactCond LES ExpCond .)
    AND             reduce using rule 25 (FactCond -> FactCond LES ExpCond .)
    OR              reduce using rule 25 (FactCond -> FactCond LES ExpCond .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66


state 81

    (26) FactCond -> FactCond GEQ ExpCond .
    (31) ExpCond -> ExpCond . ADD TermoCond
    (32) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 26 (FactCond -> FactCond GEQ ExpCond .)
    LES             reduce using rule 26 (FactCond -> FactCond GEQ ExpCond .)
    GEQ             reduce using rule 26 (FactCond -> FactCond GEQ ExpCond .)
    GRE             reduce using rule 26 (FactCond -> FactCond GEQ ExpCond .)
    EQ              reduce using rule 26 (FactCond -> FactCond GEQ ExpCond .)
    DIF             reduce using rule 26 (FactCond -> FactCond GEQ ExpCond .)
    RPAR            reduce using rule 26 (FactCond -> FactCond GEQ ExpCond .)
    AND             reduce using rule 26 (FactCond -> FactCond GEQ ExpCond .)
    OR              reduce using rule 26 (FactCond -> FactCond GEQ ExpCond .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66


state 82

    (27) FactCond -> FactCond GRE ExpCond .
    (31) ExpCond -> ExpCond . ADD TermoCond
    (32) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 27 (FactCond -> FactCond GRE ExpCond .)
    LES             reduce using rule 27 (FactCond -> FactCond GRE ExpCond .)
    GEQ             reduce using rule 27 (FactCond -> FactCond GRE ExpCond .)
    GRE             reduce using rule 27 (FactCond -> FactCond GRE ExpCond .)
    EQ              reduce using rule 27 (FactCond -> FactCond GRE ExpCond .)
    DIF             reduce using rule 27 (FactCond -> FactCond GRE ExpCond .)
    RPAR            reduce using rule 27 (FactCond -> FactCond GRE ExpCond .)
    AND             reduce using rule 27 (FactCond -> FactCond GRE ExpCond .)
    OR              reduce using rule 27 (FactCond -> FactCond GRE ExpCond .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66


state 83

    (28) FactCond -> FactCond EQ ExpCond .
    (31) ExpCond -> ExpCond . ADD TermoCond
    (32) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 28 (FactCond -> FactCond EQ ExpCond .)
    LES             reduce using rule 28 (FactCond -> FactCond EQ ExpCond .)
    GEQ             reduce using rule 28 (FactCond -> FactCond EQ ExpCond .)
    GRE             reduce using rule 28 (FactCond -> FactCond EQ ExpCond .)
    EQ              reduce using rule 28 (FactCond -> FactCond EQ ExpCond .)
    DIF             reduce using rule 28 (FactCond -> FactCond EQ ExpCond .)
    RPAR            reduce using rule 28 (FactCond -> FactCond EQ ExpCond .)
    AND             reduce using rule 28 (FactCond -> FactCond EQ ExpCond .)
    OR              reduce using rule 28 (FactCond -> FactCond EQ ExpCond .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66


state 84

    (29) FactCond -> FactCond DIF ExpCond .
    (31) ExpCond -> ExpCond . ADD TermoCond
    (32) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 29 (FactCond -> FactCond DIF ExpCond .)
    LES             reduce using rule 29 (FactCond -> FactCond DIF ExpCond .)
    GEQ             reduce using rule 29 (FactCond -> FactCond DIF ExpCond .)
    GRE             reduce using rule 29 (FactCond -> FactCond DIF ExpCond .)
    EQ              reduce using rule 29 (FactCond -> FactCond DIF ExpCond .)
    DIF             reduce using rule 29 (FactCond -> FactCond DIF ExpCond .)
    RPAR            reduce using rule 29 (FactCond -> FactCond DIF ExpCond .)
    AND             reduce using rule 29 (FactCond -> FactCond DIF ExpCond .)
    OR              reduce using rule 29 (FactCond -> FactCond DIF ExpCond .)
    ADD             shift and go to state 65
    SUB             shift and go to state 66


state 85

    (31) ExpCond -> ExpCond ADD TermoCond .
    (34) TermoCond -> TermoCond . MUL FactorCond
    (35) TermoCond -> TermoCond . DIV FactorCond
    (36) TermoCond -> TermoCond . MOD FactorCond

    ADD             reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    SUB             reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    LEQ             reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    LES             reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    GEQ             reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    GRE             reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    EQ              reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    DIF             reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    RPAR            reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    AND             reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    OR              reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    ;               reduce using rule 31 (ExpCond -> ExpCond ADD TermoCond .)
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    MOD             shift and go to state 69


state 86

    (32) ExpCond -> ExpCond SUB TermoCond .
    (34) TermoCond -> TermoCond . MUL FactorCond
    (35) TermoCond -> TermoCond . DIV FactorCond
    (36) TermoCond -> TermoCond . MOD FactorCond

    ADD             reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    SUB             reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    LEQ             reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    LES             reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    GEQ             reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    GRE             reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    EQ              reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    DIF             reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    RPAR            reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    AND             reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    OR              reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    ;               reduce using rule 32 (ExpCond -> ExpCond SUB TermoCond .)
    MUL             shift and go to state 67
    DIV             shift and go to state 68
    MOD             shift and go to state 69


state 87

    (34) TermoCond -> TermoCond MUL FactorCond .

    MUL             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    DIV             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    MOD             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    ADD             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    SUB             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    LEQ             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    LES             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    GEQ             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    GRE             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    EQ              reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    DIF             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    RPAR            reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    AND             reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    OR              reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)
    ;               reduce using rule 34 (TermoCond -> TermoCond MUL FactorCond .)


state 88

    (35) TermoCond -> TermoCond DIV FactorCond .

    MUL             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    DIV             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    MOD             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    ADD             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    SUB             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    LEQ             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    LES             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    GEQ             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    GRE             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    EQ              reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    DIF             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    RPAR            reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    AND             reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    OR              reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)
    ;               reduce using rule 35 (TermoCond -> TermoCond DIV FactorCond .)


state 89

    (36) TermoCond -> TermoCond MOD FactorCond .

    MUL             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    DIV             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    MOD             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    ADD             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    SUB             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    LEQ             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    LES             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    GEQ             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    GRE             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    EQ              reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    DIF             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    RPAR            reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    AND             reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    OR              reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)
    ;               reduce using rule 36 (TermoCond -> TermoCond MOD FactorCond .)


state 90

    (15) Inst -> READ LPAR ID RPAR ; .

    }               reduce using rule 15 (Inst -> READ LPAR ID RPAR ; .)
    PRINT           reduce using rule 15 (Inst -> READ LPAR ID RPAR ; .)
    READ            reduce using rule 15 (Inst -> READ LPAR ID RPAR ; .)
    ID              reduce using rule 15 (Inst -> READ LPAR ID RPAR ; .)
    IF              reduce using rule 15 (Inst -> READ LPAR ID RPAR ; .)
    REPEAT          reduce using rule 15 (Inst -> READ LPAR ID RPAR ; .)


state 91

    (17) Inst -> IF LPAR Log RPAR { . Insts }
    (18) Inst -> IF LPAR Log RPAR { . Insts } ELSE { Insts }
    (12) Insts -> . Insts Inst
    (13) Insts -> .

    }               reduce using rule 13 (Insts -> .)
    PRINT           reduce using rule 13 (Insts -> .)
    READ            reduce using rule 13 (Insts -> .)
    ID              reduce using rule 13 (Insts -> .)
    IF              reduce using rule 13 (Insts -> .)
    REPEAT          reduce using rule 13 (Insts -> .)

    Insts                          shift and go to state 93

state 92

    (19) Inst -> REPEAT { Insts } UNTIL . LPAR Log RPAR

    LPAR            shift and go to state 94


state 93

    (17) Inst -> IF LPAR Log RPAR { Insts . }
    (18) Inst -> IF LPAR Log RPAR { Insts . } ELSE { Insts }
    (12) Insts -> Insts . Inst
    (14) Inst -> . PRINT LPAR Log RPAR ;
    (15) Inst -> . READ LPAR ID RPAR ;
    (16) Inst -> . ID ATRIB ExpCond ;
    (17) Inst -> . IF LPAR Log RPAR { Insts }
    (18) Inst -> . IF LPAR Log RPAR { Insts } ELSE { Insts }
    (19) Inst -> . REPEAT { Insts } UNTIL LPAR Log RPAR

    }               shift and go to state 95
    PRINT           shift and go to state 27
    READ            shift and go to state 28
    ID              shift and go to state 29
    IF              shift and go to state 30
    REPEAT          shift and go to state 31

    Inst                           shift and go to state 26

state 94

    (19) Inst -> REPEAT { Insts } UNTIL LPAR . Log RPAR
    (20) Log -> . NOT Log
    (21) Log -> . Log AND FactCond
    (22) Log -> . Log OR FactCond
    (23) Log -> . FactCond
    (24) FactCond -> . FactCond LEQ ExpCond
    (25) FactCond -> . FactCond LES ExpCond
    (26) FactCond -> . FactCond GEQ ExpCond
    (27) FactCond -> . FactCond GRE ExpCond
    (28) FactCond -> . FactCond EQ ExpCond
    (29) FactCond -> . FactCond DIF ExpCond
    (30) FactCond -> . ExpCond
    (31) ExpCond -> . ExpCond ADD TermoCond
    (32) ExpCond -> . ExpCond SUB TermoCond
    (33) ExpCond -> . TermoCond
    (34) TermoCond -> . TermoCond MUL FactorCond
    (35) TermoCond -> . TermoCond DIV FactorCond
    (36) TermoCond -> . TermoCond MOD FactorCond
    (37) TermoCond -> . FactorCond
    (38) FactorCond -> . LPAR Log RPAR
    (39) FactorCond -> . NUM
    (40) FactorCond -> . ID

    NOT             shift and go to state 42
    LPAR            shift and go to state 40
    NUM             shift and go to state 47
    ID              shift and go to state 48

    Log                            shift and go to state 96
    FactCond                       shift and go to state 43
    ExpCond                        shift and go to state 44
    TermoCond                      shift and go to state 45
    FactorCond                     shift and go to state 46

state 95

    (17) Inst -> IF LPAR Log RPAR { Insts } .
    (18) Inst -> IF LPAR Log RPAR { Insts } . ELSE { Insts }

    }               reduce using rule 17 (Inst -> IF LPAR Log RPAR { Insts } .)
    PRINT           reduce using rule 17 (Inst -> IF LPAR Log RPAR { Insts } .)
    READ            reduce using rule 17 (Inst -> IF LPAR Log RPAR { Insts } .)
    ID              reduce using rule 17 (Inst -> IF LPAR Log RPAR { Insts } .)
    IF              reduce using rule 17 (Inst -> IF LPAR Log RPAR { Insts } .)
    REPEAT          reduce using rule 17 (Inst -> IF LPAR Log RPAR { Insts } .)
    ELSE            shift and go to state 97


state 96

    (19) Inst -> REPEAT { Insts } UNTIL LPAR Log . RPAR
    (21) Log -> Log . AND FactCond
    (22) Log -> Log . OR FactCond

    RPAR            shift and go to state 98
    AND             shift and go to state 56
    OR              shift and go to state 57


state 97

    (18) Inst -> IF LPAR Log RPAR { Insts } ELSE . { Insts }

    {               shift and go to state 99


state 98

    (19) Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .

    }               reduce using rule 19 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    PRINT           reduce using rule 19 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    READ            reduce using rule 19 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    ID              reduce using rule 19 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    IF              reduce using rule 19 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    REPEAT          reduce using rule 19 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)


state 99

    (18) Inst -> IF LPAR Log RPAR { Insts } ELSE { . Insts }
    (12) Insts -> . Insts Inst
    (13) Insts -> .

    }               reduce using rule 13 (Insts -> .)
    PRINT           reduce using rule 13 (Insts -> .)
    READ            reduce using rule 13 (Insts -> .)
    ID              reduce using rule 13 (Insts -> .)
    IF              reduce using rule 13 (Insts -> .)
    REPEAT          reduce using rule 13 (Insts -> .)

    Insts                          shift and go to state 100

state 100

    (18) Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts . }
    (12) Insts -> Insts . Inst
    (14) Inst -> . PRINT LPAR Log RPAR ;
    (15) Inst -> . READ LPAR ID RPAR ;
    (16) Inst -> . ID ATRIB ExpCond ;
    (17) Inst -> . IF LPAR Log RPAR { Insts }
    (18) Inst -> . IF LPAR Log RPAR { Insts } ELSE { Insts }
    (19) Inst -> . REPEAT { Insts } UNTIL LPAR Log RPAR

    }               shift and go to state 101
    PRINT           shift and go to state 27
    READ            shift and go to state 28
    ID              shift and go to state 29
    IF              shift and go to state 30
    REPEAT          shift and go to state 31

    Inst                           shift and go to state 26

state 101

    (18) Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .

    }               reduce using rule 18 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    PRINT           reduce using rule 18 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    READ            reduce using rule 18 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    ID              reduce using rule 18 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    IF              reduce using rule 18 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    REPEAT          reduce using rule 18 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
