Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> Main Funcoes
Rule 2     Main -> FUNC MAIN { Declaracoes Instrucoes }
Rule 3     Funcoes -> Funcoes Funcao
Rule 4     Funcoes -> <empty>
Rule 5     Funcao -> FUNC NAME { Declaracoes Instrucoes }
Rule 6     Declaracoes -> DECL { Decls }
Rule 7     Decls -> Decls Decl
Rule 8     Decls -> <empty>
Rule 9     Decl -> INT ID ;
Rule 10    Decl -> INT ID ATRIB ExpCond ;
Rule 11    Instrucoes -> INST { Insts }
Rule 12    Insts -> Insts Inst
Rule 13    Insts -> <empty>
Rule 14    Inst -> PRINT LPAR STRING RPAR ;
Rule 15    Inst -> PRINT LPAR Log RPAR ;
Rule 16    Inst -> READ LPAR ID RPAR ;
Rule 17    Inst -> EXEC NAME LPAR RPAR ;
Rule 18    Inst -> ID ATRIB ExpCond ;
Rule 19    Inst -> IF LPAR Log RPAR { Insts }
Rule 20    Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts }
Rule 21    Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR
Rule 22    Log -> NOT Log
Rule 23    Log -> Log AND FactCond
Rule 24    Log -> Log OR FactCond
Rule 25    Log -> FactCond
Rule 26    FactCond -> FactCond LEQ ExpCond
Rule 27    FactCond -> FactCond LES ExpCond
Rule 28    FactCond -> FactCond GEQ ExpCond
Rule 29    FactCond -> FactCond GRE ExpCond
Rule 30    FactCond -> FactCond EQ ExpCond
Rule 31    FactCond -> FactCond DIF ExpCond
Rule 32    FactCond -> ExpCond
Rule 33    ExpCond -> ExpCond ADD TermoCond
Rule 34    ExpCond -> ExpCond SUB TermoCond
Rule 35    ExpCond -> TermoCond
Rule 36    TermoCond -> TermoCond MUL FactorCond
Rule 37    TermoCond -> TermoCond DIV FactorCond
Rule 38    TermoCond -> TermoCond MOD FactorCond
Rule 39    TermoCond -> FactorCond
Rule 40    FactorCond -> LPAR Log RPAR
Rule 41    FactorCond -> NUM
Rule 42    FactorCond -> ID

Terminals, with rules where they appear

;                    : 9 10 14 15 16 17 18
ADD                  : 33
AND                  : 23
ATRIB                : 10 18
DECL                 : 6
DIF                  : 31
DIV                  : 37
ELSE                 : 20
EQ                   : 30
EXEC                 : 17
FUNC                 : 2 5
GEQ                  : 28
GRE                  : 29
ID                   : 9 10 16 18 42
IF                   : 19 20
INST                 : 11
INT                  : 9 10
LEQ                  : 26
LES                  : 27
LPAR                 : 14 15 16 17 19 20 21 40
MAIN                 : 2
MOD                  : 38
MUL                  : 36
NAME                 : 5 17
NOT                  : 22
NUM                  : 41
OR                   : 24
PRINT                : 14 15
READ                 : 16
REPEAT               : 21
RPAR                 : 14 15 16 17 19 20 21 40
STRING               : 14
SUB                  : 34
UNTIL                : 21
error                : 
{                    : 2 5 6 11 19 20 20 21
}                    : 2 5 6 11 19 20 20 21

Nonterminals, with rules where they appear

Decl                 : 7
Declaracoes          : 2 5
Decls                : 6 7
ExpCond              : 10 18 26 27 28 29 30 31 32 33 34
FactCond             : 23 24 25 26 27 28 29 30 31
FactorCond           : 36 37 38 39
Funcao               : 3
Funcoes              : 1 3
Inst                 : 12
Instrucoes           : 2 5
Insts                : 11 12 19 20 20 21
Log                  : 15 19 20 21 22 23 24 40
Main                 : 1
Programa             : 0
TermoCond            : 33 34 35 36 37 38

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . Main Funcoes
    (2) Main -> . FUNC MAIN { Declaracoes Instrucoes }

    FUNC            shift and go to state 3

    Programa                       shift and go to state 1
    Main                           shift and go to state 2

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> Main . Funcoes
    (3) Funcoes -> . Funcoes Funcao
    (4) Funcoes -> .

    FUNC            reduce using rule 4 (Funcoes -> .)
    $end            reduce using rule 4 (Funcoes -> .)

    Funcoes                        shift and go to state 4

state 3

    (2) Main -> FUNC . MAIN { Declaracoes Instrucoes }

    MAIN            shift and go to state 5


state 4

    (1) Programa -> Main Funcoes .
    (3) Funcoes -> Funcoes . Funcao
    (5) Funcao -> . FUNC NAME { Declaracoes Instrucoes }

    $end            reduce using rule 1 (Programa -> Main Funcoes .)
    FUNC            shift and go to state 7

    Funcao                         shift and go to state 6

state 5

    (2) Main -> FUNC MAIN . { Declaracoes Instrucoes }

    {               shift and go to state 8


state 6

    (3) Funcoes -> Funcoes Funcao .

    FUNC            reduce using rule 3 (Funcoes -> Funcoes Funcao .)
    $end            reduce using rule 3 (Funcoes -> Funcoes Funcao .)


state 7

    (5) Funcao -> FUNC . NAME { Declaracoes Instrucoes }

    NAME            shift and go to state 9


state 8

    (2) Main -> FUNC MAIN { . Declaracoes Instrucoes }
    (6) Declaracoes -> . DECL { Decls }

    DECL            shift and go to state 11

    Declaracoes                    shift and go to state 10

state 9

    (5) Funcao -> FUNC NAME . { Declaracoes Instrucoes }

    {               shift and go to state 12


state 10

    (2) Main -> FUNC MAIN { Declaracoes . Instrucoes }
    (11) Instrucoes -> . INST { Insts }

    INST            shift and go to state 14

    Instrucoes                     shift and go to state 13

state 11

    (6) Declaracoes -> DECL . { Decls }

    {               shift and go to state 15


state 12

    (5) Funcao -> FUNC NAME { . Declaracoes Instrucoes }
    (6) Declaracoes -> . DECL { Decls }

    DECL            shift and go to state 11

    Declaracoes                    shift and go to state 16

state 13

    (2) Main -> FUNC MAIN { Declaracoes Instrucoes . }

    }               shift and go to state 17


state 14

    (11) Instrucoes -> INST . { Insts }

    {               shift and go to state 18


state 15

    (6) Declaracoes -> DECL { . Decls }
    (7) Decls -> . Decls Decl
    (8) Decls -> .

    }               reduce using rule 8 (Decls -> .)
    INT             reduce using rule 8 (Decls -> .)

    Decls                          shift and go to state 19

state 16

    (5) Funcao -> FUNC NAME { Declaracoes . Instrucoes }
    (11) Instrucoes -> . INST { Insts }

    INST            shift and go to state 14

    Instrucoes                     shift and go to state 20

state 17

    (2) Main -> FUNC MAIN { Declaracoes Instrucoes } .

    FUNC            reduce using rule 2 (Main -> FUNC MAIN { Declaracoes Instrucoes } .)
    $end            reduce using rule 2 (Main -> FUNC MAIN { Declaracoes Instrucoes } .)


state 18

    (11) Instrucoes -> INST { . Insts }
    (12) Insts -> . Insts Inst
    (13) Insts -> .

    }               reduce using rule 13 (Insts -> .)
    PRINT           reduce using rule 13 (Insts -> .)
    READ            reduce using rule 13 (Insts -> .)
    EXEC            reduce using rule 13 (Insts -> .)
    ID              reduce using rule 13 (Insts -> .)
    IF              reduce using rule 13 (Insts -> .)
    REPEAT          reduce using rule 13 (Insts -> .)

    Insts                          shift and go to state 21

state 19

    (6) Declaracoes -> DECL { Decls . }
    (7) Decls -> Decls . Decl
    (9) Decl -> . INT ID ;
    (10) Decl -> . INT ID ATRIB ExpCond ;

    }               shift and go to state 22
    INT             shift and go to state 24

    Decl                           shift and go to state 23

state 20

    (5) Funcao -> FUNC NAME { Declaracoes Instrucoes . }

    }               shift and go to state 25


state 21

    (11) Instrucoes -> INST { Insts . }
    (12) Insts -> Insts . Inst
    (14) Inst -> . PRINT LPAR STRING RPAR ;
    (15) Inst -> . PRINT LPAR Log RPAR ;
    (16) Inst -> . READ LPAR ID RPAR ;
    (17) Inst -> . EXEC NAME LPAR RPAR ;
    (18) Inst -> . ID ATRIB ExpCond ;
    (19) Inst -> . IF LPAR Log RPAR { Insts }
    (20) Inst -> . IF LPAR Log RPAR { Insts } ELSE { Insts }
    (21) Inst -> . REPEAT { Insts } UNTIL LPAR Log RPAR

    }               shift and go to state 26
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    EXEC            shift and go to state 31
    ID              shift and go to state 30
    IF              shift and go to state 32
    REPEAT          shift and go to state 33

    Inst                           shift and go to state 27

state 22

    (6) Declaracoes -> DECL { Decls } .

    INST            reduce using rule 6 (Declaracoes -> DECL { Decls } .)


state 23

    (7) Decls -> Decls Decl .

    }               reduce using rule 7 (Decls -> Decls Decl .)
    INT             reduce using rule 7 (Decls -> Decls Decl .)


state 24

    (9) Decl -> INT . ID ;
    (10) Decl -> INT . ID ATRIB ExpCond ;

    ID              shift and go to state 34


state 25

    (5) Funcao -> FUNC NAME { Declaracoes Instrucoes } .

    FUNC            reduce using rule 5 (Funcao -> FUNC NAME { Declaracoes Instrucoes } .)
    $end            reduce using rule 5 (Funcao -> FUNC NAME { Declaracoes Instrucoes } .)


state 26

    (11) Instrucoes -> INST { Insts } .

    }               reduce using rule 11 (Instrucoes -> INST { Insts } .)


state 27

    (12) Insts -> Insts Inst .

    }               reduce using rule 12 (Insts -> Insts Inst .)
    PRINT           reduce using rule 12 (Insts -> Insts Inst .)
    READ            reduce using rule 12 (Insts -> Insts Inst .)
    EXEC            reduce using rule 12 (Insts -> Insts Inst .)
    ID              reduce using rule 12 (Insts -> Insts Inst .)
    IF              reduce using rule 12 (Insts -> Insts Inst .)
    REPEAT          reduce using rule 12 (Insts -> Insts Inst .)


state 28

    (14) Inst -> PRINT . LPAR STRING RPAR ;
    (15) Inst -> PRINT . LPAR Log RPAR ;

    LPAR            shift and go to state 35


state 29

    (16) Inst -> READ . LPAR ID RPAR ;

    LPAR            shift and go to state 36


state 30

    (18) Inst -> ID . ATRIB ExpCond ;

    ATRIB           shift and go to state 37


state 31

    (17) Inst -> EXEC . NAME LPAR RPAR ;

    NAME            shift and go to state 38


state 32

    (19) Inst -> IF . LPAR Log RPAR { Insts }
    (20) Inst -> IF . LPAR Log RPAR { Insts } ELSE { Insts }

    LPAR            shift and go to state 39


state 33

    (21) Inst -> REPEAT . { Insts } UNTIL LPAR Log RPAR

    {               shift and go to state 40


state 34

    (9) Decl -> INT ID . ;
    (10) Decl -> INT ID . ATRIB ExpCond ;

    ;               shift and go to state 41
    ATRIB           shift and go to state 42


state 35

    (14) Inst -> PRINT LPAR . STRING RPAR ;
    (15) Inst -> PRINT LPAR . Log RPAR ;
    (22) Log -> . NOT Log
    (23) Log -> . Log AND FactCond
    (24) Log -> . Log OR FactCond
    (25) Log -> . FactCond
    (26) FactCond -> . FactCond LEQ ExpCond
    (27) FactCond -> . FactCond LES ExpCond
    (28) FactCond -> . FactCond GEQ ExpCond
    (29) FactCond -> . FactCond GRE ExpCond
    (30) FactCond -> . FactCond EQ ExpCond
    (31) FactCond -> . FactCond DIF ExpCond
    (32) FactCond -> . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    STRING          shift and go to state 44
    NOT             shift and go to state 46
    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    Log                            shift and go to state 45
    FactCond                       shift and go to state 47
    ExpCond                        shift and go to state 48
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 36

    (16) Inst -> READ LPAR . ID RPAR ;

    ID              shift and go to state 53


state 37

    (18) Inst -> ID ATRIB . ExpCond ;
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    ExpCond                        shift and go to state 54
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 38

    (17) Inst -> EXEC NAME . LPAR RPAR ;

    LPAR            shift and go to state 55


state 39

    (19) Inst -> IF LPAR . Log RPAR { Insts }
    (20) Inst -> IF LPAR . Log RPAR { Insts } ELSE { Insts }
    (22) Log -> . NOT Log
    (23) Log -> . Log AND FactCond
    (24) Log -> . Log OR FactCond
    (25) Log -> . FactCond
    (26) FactCond -> . FactCond LEQ ExpCond
    (27) FactCond -> . FactCond LES ExpCond
    (28) FactCond -> . FactCond GEQ ExpCond
    (29) FactCond -> . FactCond GRE ExpCond
    (30) FactCond -> . FactCond EQ ExpCond
    (31) FactCond -> . FactCond DIF ExpCond
    (32) FactCond -> . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    NOT             shift and go to state 46
    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    Log                            shift and go to state 56
    FactCond                       shift and go to state 47
    ExpCond                        shift and go to state 48
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 40

    (21) Inst -> REPEAT { . Insts } UNTIL LPAR Log RPAR
    (12) Insts -> . Insts Inst
    (13) Insts -> .

    }               reduce using rule 13 (Insts -> .)
    PRINT           reduce using rule 13 (Insts -> .)
    READ            reduce using rule 13 (Insts -> .)
    EXEC            reduce using rule 13 (Insts -> .)
    ID              reduce using rule 13 (Insts -> .)
    IF              reduce using rule 13 (Insts -> .)
    REPEAT          reduce using rule 13 (Insts -> .)

    Insts                          shift and go to state 57

state 41

    (9) Decl -> INT ID ; .

    }               reduce using rule 9 (Decl -> INT ID ; .)
    INT             reduce using rule 9 (Decl -> INT ID ; .)


state 42

    (10) Decl -> INT ID ATRIB . ExpCond ;
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    ExpCond                        shift and go to state 58
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 43

    (40) FactorCond -> LPAR . Log RPAR
    (22) Log -> . NOT Log
    (23) Log -> . Log AND FactCond
    (24) Log -> . Log OR FactCond
    (25) Log -> . FactCond
    (26) FactCond -> . FactCond LEQ ExpCond
    (27) FactCond -> . FactCond LES ExpCond
    (28) FactCond -> . FactCond GEQ ExpCond
    (29) FactCond -> . FactCond GRE ExpCond
    (30) FactCond -> . FactCond EQ ExpCond
    (31) FactCond -> . FactCond DIF ExpCond
    (32) FactCond -> . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    NOT             shift and go to state 46
    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    Log                            shift and go to state 59
    FactCond                       shift and go to state 47
    ExpCond                        shift and go to state 48
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 44

    (14) Inst -> PRINT LPAR STRING . RPAR ;

    RPAR            shift and go to state 60


state 45

    (15) Inst -> PRINT LPAR Log . RPAR ;
    (23) Log -> Log . AND FactCond
    (24) Log -> Log . OR FactCond

    RPAR            shift and go to state 61
    AND             shift and go to state 62
    OR              shift and go to state 63


state 46

    (22) Log -> NOT . Log
    (22) Log -> . NOT Log
    (23) Log -> . Log AND FactCond
    (24) Log -> . Log OR FactCond
    (25) Log -> . FactCond
    (26) FactCond -> . FactCond LEQ ExpCond
    (27) FactCond -> . FactCond LES ExpCond
    (28) FactCond -> . FactCond GEQ ExpCond
    (29) FactCond -> . FactCond GRE ExpCond
    (30) FactCond -> . FactCond EQ ExpCond
    (31) FactCond -> . FactCond DIF ExpCond
    (32) FactCond -> . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    NOT             shift and go to state 46
    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    Log                            shift and go to state 64
    FactCond                       shift and go to state 47
    ExpCond                        shift and go to state 48
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 47

    (25) Log -> FactCond .
    (26) FactCond -> FactCond . LEQ ExpCond
    (27) FactCond -> FactCond . LES ExpCond
    (28) FactCond -> FactCond . GEQ ExpCond
    (29) FactCond -> FactCond . GRE ExpCond
    (30) FactCond -> FactCond . EQ ExpCond
    (31) FactCond -> FactCond . DIF ExpCond

    RPAR            reduce using rule 25 (Log -> FactCond .)
    AND             reduce using rule 25 (Log -> FactCond .)
    OR              reduce using rule 25 (Log -> FactCond .)
    LEQ             shift and go to state 65
    LES             shift and go to state 66
    GEQ             shift and go to state 67
    GRE             shift and go to state 68
    EQ              shift and go to state 69
    DIF             shift and go to state 70


state 48

    (32) FactCond -> ExpCond .
    (33) ExpCond -> ExpCond . ADD TermoCond
    (34) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 32 (FactCond -> ExpCond .)
    LES             reduce using rule 32 (FactCond -> ExpCond .)
    GEQ             reduce using rule 32 (FactCond -> ExpCond .)
    GRE             reduce using rule 32 (FactCond -> ExpCond .)
    EQ              reduce using rule 32 (FactCond -> ExpCond .)
    DIF             reduce using rule 32 (FactCond -> ExpCond .)
    RPAR            reduce using rule 32 (FactCond -> ExpCond .)
    AND             reduce using rule 32 (FactCond -> ExpCond .)
    OR              reduce using rule 32 (FactCond -> ExpCond .)
    ADD             shift and go to state 71
    SUB             shift and go to state 72


state 49

    (35) ExpCond -> TermoCond .
    (36) TermoCond -> TermoCond . MUL FactorCond
    (37) TermoCond -> TermoCond . DIV FactorCond
    (38) TermoCond -> TermoCond . MOD FactorCond

    ADD             reduce using rule 35 (ExpCond -> TermoCond .)
    SUB             reduce using rule 35 (ExpCond -> TermoCond .)
    LEQ             reduce using rule 35 (ExpCond -> TermoCond .)
    LES             reduce using rule 35 (ExpCond -> TermoCond .)
    GEQ             reduce using rule 35 (ExpCond -> TermoCond .)
    GRE             reduce using rule 35 (ExpCond -> TermoCond .)
    EQ              reduce using rule 35 (ExpCond -> TermoCond .)
    DIF             reduce using rule 35 (ExpCond -> TermoCond .)
    RPAR            reduce using rule 35 (ExpCond -> TermoCond .)
    AND             reduce using rule 35 (ExpCond -> TermoCond .)
    OR              reduce using rule 35 (ExpCond -> TermoCond .)
    ;               reduce using rule 35 (ExpCond -> TermoCond .)
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    MOD             shift and go to state 75


state 50

    (39) TermoCond -> FactorCond .

    MUL             reduce using rule 39 (TermoCond -> FactorCond .)
    DIV             reduce using rule 39 (TermoCond -> FactorCond .)
    MOD             reduce using rule 39 (TermoCond -> FactorCond .)
    ADD             reduce using rule 39 (TermoCond -> FactorCond .)
    SUB             reduce using rule 39 (TermoCond -> FactorCond .)
    LEQ             reduce using rule 39 (TermoCond -> FactorCond .)
    LES             reduce using rule 39 (TermoCond -> FactorCond .)
    GEQ             reduce using rule 39 (TermoCond -> FactorCond .)
    GRE             reduce using rule 39 (TermoCond -> FactorCond .)
    EQ              reduce using rule 39 (TermoCond -> FactorCond .)
    DIF             reduce using rule 39 (TermoCond -> FactorCond .)
    RPAR            reduce using rule 39 (TermoCond -> FactorCond .)
    AND             reduce using rule 39 (TermoCond -> FactorCond .)
    OR              reduce using rule 39 (TermoCond -> FactorCond .)
    ;               reduce using rule 39 (TermoCond -> FactorCond .)


state 51

    (41) FactorCond -> NUM .

    MUL             reduce using rule 41 (FactorCond -> NUM .)
    DIV             reduce using rule 41 (FactorCond -> NUM .)
    MOD             reduce using rule 41 (FactorCond -> NUM .)
    ADD             reduce using rule 41 (FactorCond -> NUM .)
    SUB             reduce using rule 41 (FactorCond -> NUM .)
    LEQ             reduce using rule 41 (FactorCond -> NUM .)
    LES             reduce using rule 41 (FactorCond -> NUM .)
    GEQ             reduce using rule 41 (FactorCond -> NUM .)
    GRE             reduce using rule 41 (FactorCond -> NUM .)
    EQ              reduce using rule 41 (FactorCond -> NUM .)
    DIF             reduce using rule 41 (FactorCond -> NUM .)
    RPAR            reduce using rule 41 (FactorCond -> NUM .)
    AND             reduce using rule 41 (FactorCond -> NUM .)
    OR              reduce using rule 41 (FactorCond -> NUM .)
    ;               reduce using rule 41 (FactorCond -> NUM .)


state 52

    (42) FactorCond -> ID .

    MUL             reduce using rule 42 (FactorCond -> ID .)
    DIV             reduce using rule 42 (FactorCond -> ID .)
    MOD             reduce using rule 42 (FactorCond -> ID .)
    ADD             reduce using rule 42 (FactorCond -> ID .)
    SUB             reduce using rule 42 (FactorCond -> ID .)
    LEQ             reduce using rule 42 (FactorCond -> ID .)
    LES             reduce using rule 42 (FactorCond -> ID .)
    GEQ             reduce using rule 42 (FactorCond -> ID .)
    GRE             reduce using rule 42 (FactorCond -> ID .)
    EQ              reduce using rule 42 (FactorCond -> ID .)
    DIF             reduce using rule 42 (FactorCond -> ID .)
    RPAR            reduce using rule 42 (FactorCond -> ID .)
    AND             reduce using rule 42 (FactorCond -> ID .)
    OR              reduce using rule 42 (FactorCond -> ID .)
    ;               reduce using rule 42 (FactorCond -> ID .)


state 53

    (16) Inst -> READ LPAR ID . RPAR ;

    RPAR            shift and go to state 76


state 54

    (18) Inst -> ID ATRIB ExpCond . ;
    (33) ExpCond -> ExpCond . ADD TermoCond
    (34) ExpCond -> ExpCond . SUB TermoCond

    ;               shift and go to state 77
    ADD             shift and go to state 71
    SUB             shift and go to state 72


state 55

    (17) Inst -> EXEC NAME LPAR . RPAR ;

    RPAR            shift and go to state 78


state 56

    (19) Inst -> IF LPAR Log . RPAR { Insts }
    (20) Inst -> IF LPAR Log . RPAR { Insts } ELSE { Insts }
    (23) Log -> Log . AND FactCond
    (24) Log -> Log . OR FactCond

    RPAR            shift and go to state 79
    AND             shift and go to state 62
    OR              shift and go to state 63


state 57

    (21) Inst -> REPEAT { Insts . } UNTIL LPAR Log RPAR
    (12) Insts -> Insts . Inst
    (14) Inst -> . PRINT LPAR STRING RPAR ;
    (15) Inst -> . PRINT LPAR Log RPAR ;
    (16) Inst -> . READ LPAR ID RPAR ;
    (17) Inst -> . EXEC NAME LPAR RPAR ;
    (18) Inst -> . ID ATRIB ExpCond ;
    (19) Inst -> . IF LPAR Log RPAR { Insts }
    (20) Inst -> . IF LPAR Log RPAR { Insts } ELSE { Insts }
    (21) Inst -> . REPEAT { Insts } UNTIL LPAR Log RPAR

    }               shift and go to state 80
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    EXEC            shift and go to state 31
    ID              shift and go to state 30
    IF              shift and go to state 32
    REPEAT          shift and go to state 33

    Inst                           shift and go to state 27

state 58

    (10) Decl -> INT ID ATRIB ExpCond . ;
    (33) ExpCond -> ExpCond . ADD TermoCond
    (34) ExpCond -> ExpCond . SUB TermoCond

    ;               shift and go to state 81
    ADD             shift and go to state 71
    SUB             shift and go to state 72


state 59

    (40) FactorCond -> LPAR Log . RPAR
    (23) Log -> Log . AND FactCond
    (24) Log -> Log . OR FactCond

    RPAR            shift and go to state 82
    AND             shift and go to state 62
    OR              shift and go to state 63


state 60

    (14) Inst -> PRINT LPAR STRING RPAR . ;

    ;               shift and go to state 83


state 61

    (15) Inst -> PRINT LPAR Log RPAR . ;

    ;               shift and go to state 84


state 62

    (23) Log -> Log AND . FactCond
    (26) FactCond -> . FactCond LEQ ExpCond
    (27) FactCond -> . FactCond LES ExpCond
    (28) FactCond -> . FactCond GEQ ExpCond
    (29) FactCond -> . FactCond GRE ExpCond
    (30) FactCond -> . FactCond EQ ExpCond
    (31) FactCond -> . FactCond DIF ExpCond
    (32) FactCond -> . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    FactCond                       shift and go to state 85
    ExpCond                        shift and go to state 48
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 63

    (24) Log -> Log OR . FactCond
    (26) FactCond -> . FactCond LEQ ExpCond
    (27) FactCond -> . FactCond LES ExpCond
    (28) FactCond -> . FactCond GEQ ExpCond
    (29) FactCond -> . FactCond GRE ExpCond
    (30) FactCond -> . FactCond EQ ExpCond
    (31) FactCond -> . FactCond DIF ExpCond
    (32) FactCond -> . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    FactCond                       shift and go to state 86
    ExpCond                        shift and go to state 48
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 64

    (22) Log -> NOT Log .
    (23) Log -> Log . AND FactCond
    (24) Log -> Log . OR FactCond

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAR            reduce using rule 22 (Log -> NOT Log .)
    AND             shift and go to state 62
    OR              shift and go to state 63

  ! AND             [ reduce using rule 22 (Log -> NOT Log .) ]
  ! OR              [ reduce using rule 22 (Log -> NOT Log .) ]


state 65

    (26) FactCond -> FactCond LEQ . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    ExpCond                        shift and go to state 87
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 66

    (27) FactCond -> FactCond LES . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    ExpCond                        shift and go to state 88
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 67

    (28) FactCond -> FactCond GEQ . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    ExpCond                        shift and go to state 89
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 68

    (29) FactCond -> FactCond GRE . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    ExpCond                        shift and go to state 90
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 69

    (30) FactCond -> FactCond EQ . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    ExpCond                        shift and go to state 91
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 70

    (31) FactCond -> FactCond DIF . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    ExpCond                        shift and go to state 92
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 71

    (33) ExpCond -> ExpCond ADD . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    TermoCond                      shift and go to state 93
    FactorCond                     shift and go to state 50

state 72

    (34) ExpCond -> ExpCond SUB . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    TermoCond                      shift and go to state 94
    FactorCond                     shift and go to state 50

state 73

    (36) TermoCond -> TermoCond MUL . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    FactorCond                     shift and go to state 95

state 74

    (37) TermoCond -> TermoCond DIV . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    FactorCond                     shift and go to state 96

state 75

    (38) TermoCond -> TermoCond MOD . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    FactorCond                     shift and go to state 97

state 76

    (16) Inst -> READ LPAR ID RPAR . ;

    ;               shift and go to state 98


state 77

    (18) Inst -> ID ATRIB ExpCond ; .

    }               reduce using rule 18 (Inst -> ID ATRIB ExpCond ; .)
    PRINT           reduce using rule 18 (Inst -> ID ATRIB ExpCond ; .)
    READ            reduce using rule 18 (Inst -> ID ATRIB ExpCond ; .)
    EXEC            reduce using rule 18 (Inst -> ID ATRIB ExpCond ; .)
    ID              reduce using rule 18 (Inst -> ID ATRIB ExpCond ; .)
    IF              reduce using rule 18 (Inst -> ID ATRIB ExpCond ; .)
    REPEAT          reduce using rule 18 (Inst -> ID ATRIB ExpCond ; .)


state 78

    (17) Inst -> EXEC NAME LPAR RPAR . ;

    ;               shift and go to state 99


state 79

    (19) Inst -> IF LPAR Log RPAR . { Insts }
    (20) Inst -> IF LPAR Log RPAR . { Insts } ELSE { Insts }

    {               shift and go to state 100


state 80

    (21) Inst -> REPEAT { Insts } . UNTIL LPAR Log RPAR

    UNTIL           shift and go to state 101


state 81

    (10) Decl -> INT ID ATRIB ExpCond ; .

    }               reduce using rule 10 (Decl -> INT ID ATRIB ExpCond ; .)
    INT             reduce using rule 10 (Decl -> INT ID ATRIB ExpCond ; .)


state 82

    (40) FactorCond -> LPAR Log RPAR .

    MUL             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    DIV             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    MOD             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    ADD             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    SUB             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    LEQ             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    LES             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    GEQ             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    GRE             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    EQ              reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    DIF             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    RPAR            reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    AND             reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    OR              reduce using rule 40 (FactorCond -> LPAR Log RPAR .)
    ;               reduce using rule 40 (FactorCond -> LPAR Log RPAR .)


state 83

    (14) Inst -> PRINT LPAR STRING RPAR ; .

    }               reduce using rule 14 (Inst -> PRINT LPAR STRING RPAR ; .)
    PRINT           reduce using rule 14 (Inst -> PRINT LPAR STRING RPAR ; .)
    READ            reduce using rule 14 (Inst -> PRINT LPAR STRING RPAR ; .)
    EXEC            reduce using rule 14 (Inst -> PRINT LPAR STRING RPAR ; .)
    ID              reduce using rule 14 (Inst -> PRINT LPAR STRING RPAR ; .)
    IF              reduce using rule 14 (Inst -> PRINT LPAR STRING RPAR ; .)
    REPEAT          reduce using rule 14 (Inst -> PRINT LPAR STRING RPAR ; .)


state 84

    (15) Inst -> PRINT LPAR Log RPAR ; .

    }               reduce using rule 15 (Inst -> PRINT LPAR Log RPAR ; .)
    PRINT           reduce using rule 15 (Inst -> PRINT LPAR Log RPAR ; .)
    READ            reduce using rule 15 (Inst -> PRINT LPAR Log RPAR ; .)
    EXEC            reduce using rule 15 (Inst -> PRINT LPAR Log RPAR ; .)
    ID              reduce using rule 15 (Inst -> PRINT LPAR Log RPAR ; .)
    IF              reduce using rule 15 (Inst -> PRINT LPAR Log RPAR ; .)
    REPEAT          reduce using rule 15 (Inst -> PRINT LPAR Log RPAR ; .)


state 85

    (23) Log -> Log AND FactCond .
    (26) FactCond -> FactCond . LEQ ExpCond
    (27) FactCond -> FactCond . LES ExpCond
    (28) FactCond -> FactCond . GEQ ExpCond
    (29) FactCond -> FactCond . GRE ExpCond
    (30) FactCond -> FactCond . EQ ExpCond
    (31) FactCond -> FactCond . DIF ExpCond

    RPAR            reduce using rule 23 (Log -> Log AND FactCond .)
    AND             reduce using rule 23 (Log -> Log AND FactCond .)
    OR              reduce using rule 23 (Log -> Log AND FactCond .)
    LEQ             shift and go to state 65
    LES             shift and go to state 66
    GEQ             shift and go to state 67
    GRE             shift and go to state 68
    EQ              shift and go to state 69
    DIF             shift and go to state 70


state 86

    (24) Log -> Log OR FactCond .
    (26) FactCond -> FactCond . LEQ ExpCond
    (27) FactCond -> FactCond . LES ExpCond
    (28) FactCond -> FactCond . GEQ ExpCond
    (29) FactCond -> FactCond . GRE ExpCond
    (30) FactCond -> FactCond . EQ ExpCond
    (31) FactCond -> FactCond . DIF ExpCond

    RPAR            reduce using rule 24 (Log -> Log OR FactCond .)
    AND             reduce using rule 24 (Log -> Log OR FactCond .)
    OR              reduce using rule 24 (Log -> Log OR FactCond .)
    LEQ             shift and go to state 65
    LES             shift and go to state 66
    GEQ             shift and go to state 67
    GRE             shift and go to state 68
    EQ              shift and go to state 69
    DIF             shift and go to state 70


state 87

    (26) FactCond -> FactCond LEQ ExpCond .
    (33) ExpCond -> ExpCond . ADD TermoCond
    (34) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 26 (FactCond -> FactCond LEQ ExpCond .)
    LES             reduce using rule 26 (FactCond -> FactCond LEQ ExpCond .)
    GEQ             reduce using rule 26 (FactCond -> FactCond LEQ ExpCond .)
    GRE             reduce using rule 26 (FactCond -> FactCond LEQ ExpCond .)
    EQ              reduce using rule 26 (FactCond -> FactCond LEQ ExpCond .)
    DIF             reduce using rule 26 (FactCond -> FactCond LEQ ExpCond .)
    RPAR            reduce using rule 26 (FactCond -> FactCond LEQ ExpCond .)
    AND             reduce using rule 26 (FactCond -> FactCond LEQ ExpCond .)
    OR              reduce using rule 26 (FactCond -> FactCond LEQ ExpCond .)
    ADD             shift and go to state 71
    SUB             shift and go to state 72


state 88

    (27) FactCond -> FactCond LES ExpCond .
    (33) ExpCond -> ExpCond . ADD TermoCond
    (34) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 27 (FactCond -> FactCond LES ExpCond .)
    LES             reduce using rule 27 (FactCond -> FactCond LES ExpCond .)
    GEQ             reduce using rule 27 (FactCond -> FactCond LES ExpCond .)
    GRE             reduce using rule 27 (FactCond -> FactCond LES ExpCond .)
    EQ              reduce using rule 27 (FactCond -> FactCond LES ExpCond .)
    DIF             reduce using rule 27 (FactCond -> FactCond LES ExpCond .)
    RPAR            reduce using rule 27 (FactCond -> FactCond LES ExpCond .)
    AND             reduce using rule 27 (FactCond -> FactCond LES ExpCond .)
    OR              reduce using rule 27 (FactCond -> FactCond LES ExpCond .)
    ADD             shift and go to state 71
    SUB             shift and go to state 72


state 89

    (28) FactCond -> FactCond GEQ ExpCond .
    (33) ExpCond -> ExpCond . ADD TermoCond
    (34) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 28 (FactCond -> FactCond GEQ ExpCond .)
    LES             reduce using rule 28 (FactCond -> FactCond GEQ ExpCond .)
    GEQ             reduce using rule 28 (FactCond -> FactCond GEQ ExpCond .)
    GRE             reduce using rule 28 (FactCond -> FactCond GEQ ExpCond .)
    EQ              reduce using rule 28 (FactCond -> FactCond GEQ ExpCond .)
    DIF             reduce using rule 28 (FactCond -> FactCond GEQ ExpCond .)
    RPAR            reduce using rule 28 (FactCond -> FactCond GEQ ExpCond .)
    AND             reduce using rule 28 (FactCond -> FactCond GEQ ExpCond .)
    OR              reduce using rule 28 (FactCond -> FactCond GEQ ExpCond .)
    ADD             shift and go to state 71
    SUB             shift and go to state 72


state 90

    (29) FactCond -> FactCond GRE ExpCond .
    (33) ExpCond -> ExpCond . ADD TermoCond
    (34) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 29 (FactCond -> FactCond GRE ExpCond .)
    LES             reduce using rule 29 (FactCond -> FactCond GRE ExpCond .)
    GEQ             reduce using rule 29 (FactCond -> FactCond GRE ExpCond .)
    GRE             reduce using rule 29 (FactCond -> FactCond GRE ExpCond .)
    EQ              reduce using rule 29 (FactCond -> FactCond GRE ExpCond .)
    DIF             reduce using rule 29 (FactCond -> FactCond GRE ExpCond .)
    RPAR            reduce using rule 29 (FactCond -> FactCond GRE ExpCond .)
    AND             reduce using rule 29 (FactCond -> FactCond GRE ExpCond .)
    OR              reduce using rule 29 (FactCond -> FactCond GRE ExpCond .)
    ADD             shift and go to state 71
    SUB             shift and go to state 72


state 91

    (30) FactCond -> FactCond EQ ExpCond .
    (33) ExpCond -> ExpCond . ADD TermoCond
    (34) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 30 (FactCond -> FactCond EQ ExpCond .)
    LES             reduce using rule 30 (FactCond -> FactCond EQ ExpCond .)
    GEQ             reduce using rule 30 (FactCond -> FactCond EQ ExpCond .)
    GRE             reduce using rule 30 (FactCond -> FactCond EQ ExpCond .)
    EQ              reduce using rule 30 (FactCond -> FactCond EQ ExpCond .)
    DIF             reduce using rule 30 (FactCond -> FactCond EQ ExpCond .)
    RPAR            reduce using rule 30 (FactCond -> FactCond EQ ExpCond .)
    AND             reduce using rule 30 (FactCond -> FactCond EQ ExpCond .)
    OR              reduce using rule 30 (FactCond -> FactCond EQ ExpCond .)
    ADD             shift and go to state 71
    SUB             shift and go to state 72


state 92

    (31) FactCond -> FactCond DIF ExpCond .
    (33) ExpCond -> ExpCond . ADD TermoCond
    (34) ExpCond -> ExpCond . SUB TermoCond

    LEQ             reduce using rule 31 (FactCond -> FactCond DIF ExpCond .)
    LES             reduce using rule 31 (FactCond -> FactCond DIF ExpCond .)
    GEQ             reduce using rule 31 (FactCond -> FactCond DIF ExpCond .)
    GRE             reduce using rule 31 (FactCond -> FactCond DIF ExpCond .)
    EQ              reduce using rule 31 (FactCond -> FactCond DIF ExpCond .)
    DIF             reduce using rule 31 (FactCond -> FactCond DIF ExpCond .)
    RPAR            reduce using rule 31 (FactCond -> FactCond DIF ExpCond .)
    AND             reduce using rule 31 (FactCond -> FactCond DIF ExpCond .)
    OR              reduce using rule 31 (FactCond -> FactCond DIF ExpCond .)
    ADD             shift and go to state 71
    SUB             shift and go to state 72


state 93

    (33) ExpCond -> ExpCond ADD TermoCond .
    (36) TermoCond -> TermoCond . MUL FactorCond
    (37) TermoCond -> TermoCond . DIV FactorCond
    (38) TermoCond -> TermoCond . MOD FactorCond

    ADD             reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    SUB             reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    LEQ             reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    LES             reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    GEQ             reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    GRE             reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    EQ              reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    DIF             reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    RPAR            reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    AND             reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    OR              reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    ;               reduce using rule 33 (ExpCond -> ExpCond ADD TermoCond .)
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    MOD             shift and go to state 75


state 94

    (34) ExpCond -> ExpCond SUB TermoCond .
    (36) TermoCond -> TermoCond . MUL FactorCond
    (37) TermoCond -> TermoCond . DIV FactorCond
    (38) TermoCond -> TermoCond . MOD FactorCond

    ADD             reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    SUB             reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    LEQ             reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    LES             reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    GEQ             reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    GRE             reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    EQ              reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    DIF             reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    RPAR            reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    AND             reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    OR              reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    ;               reduce using rule 34 (ExpCond -> ExpCond SUB TermoCond .)
    MUL             shift and go to state 73
    DIV             shift and go to state 74
    MOD             shift and go to state 75


state 95

    (36) TermoCond -> TermoCond MUL FactorCond .

    MUL             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    DIV             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    MOD             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    ADD             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    SUB             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    LEQ             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    LES             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    GEQ             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    GRE             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    EQ              reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    DIF             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    RPAR            reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    AND             reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    OR              reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)
    ;               reduce using rule 36 (TermoCond -> TermoCond MUL FactorCond .)


state 96

    (37) TermoCond -> TermoCond DIV FactorCond .

    MUL             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    DIV             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    MOD             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    ADD             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    SUB             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    LEQ             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    LES             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    GEQ             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    GRE             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    EQ              reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    DIF             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    RPAR            reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    AND             reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    OR              reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)
    ;               reduce using rule 37 (TermoCond -> TermoCond DIV FactorCond .)


state 97

    (38) TermoCond -> TermoCond MOD FactorCond .

    MUL             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    DIV             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    MOD             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    ADD             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    SUB             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    LEQ             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    LES             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    GEQ             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    GRE             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    EQ              reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    DIF             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    RPAR            reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    AND             reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    OR              reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)
    ;               reduce using rule 38 (TermoCond -> TermoCond MOD FactorCond .)


state 98

    (16) Inst -> READ LPAR ID RPAR ; .

    }               reduce using rule 16 (Inst -> READ LPAR ID RPAR ; .)
    PRINT           reduce using rule 16 (Inst -> READ LPAR ID RPAR ; .)
    READ            reduce using rule 16 (Inst -> READ LPAR ID RPAR ; .)
    EXEC            reduce using rule 16 (Inst -> READ LPAR ID RPAR ; .)
    ID              reduce using rule 16 (Inst -> READ LPAR ID RPAR ; .)
    IF              reduce using rule 16 (Inst -> READ LPAR ID RPAR ; .)
    REPEAT          reduce using rule 16 (Inst -> READ LPAR ID RPAR ; .)


state 99

    (17) Inst -> EXEC NAME LPAR RPAR ; .

    }               reduce using rule 17 (Inst -> EXEC NAME LPAR RPAR ; .)
    PRINT           reduce using rule 17 (Inst -> EXEC NAME LPAR RPAR ; .)
    READ            reduce using rule 17 (Inst -> EXEC NAME LPAR RPAR ; .)
    EXEC            reduce using rule 17 (Inst -> EXEC NAME LPAR RPAR ; .)
    ID              reduce using rule 17 (Inst -> EXEC NAME LPAR RPAR ; .)
    IF              reduce using rule 17 (Inst -> EXEC NAME LPAR RPAR ; .)
    REPEAT          reduce using rule 17 (Inst -> EXEC NAME LPAR RPAR ; .)


state 100

    (19) Inst -> IF LPAR Log RPAR { . Insts }
    (20) Inst -> IF LPAR Log RPAR { . Insts } ELSE { Insts }
    (12) Insts -> . Insts Inst
    (13) Insts -> .

    }               reduce using rule 13 (Insts -> .)
    PRINT           reduce using rule 13 (Insts -> .)
    READ            reduce using rule 13 (Insts -> .)
    EXEC            reduce using rule 13 (Insts -> .)
    ID              reduce using rule 13 (Insts -> .)
    IF              reduce using rule 13 (Insts -> .)
    REPEAT          reduce using rule 13 (Insts -> .)

    Insts                          shift and go to state 102

state 101

    (21) Inst -> REPEAT { Insts } UNTIL . LPAR Log RPAR

    LPAR            shift and go to state 103


state 102

    (19) Inst -> IF LPAR Log RPAR { Insts . }
    (20) Inst -> IF LPAR Log RPAR { Insts . } ELSE { Insts }
    (12) Insts -> Insts . Inst
    (14) Inst -> . PRINT LPAR STRING RPAR ;
    (15) Inst -> . PRINT LPAR Log RPAR ;
    (16) Inst -> . READ LPAR ID RPAR ;
    (17) Inst -> . EXEC NAME LPAR RPAR ;
    (18) Inst -> . ID ATRIB ExpCond ;
    (19) Inst -> . IF LPAR Log RPAR { Insts }
    (20) Inst -> . IF LPAR Log RPAR { Insts } ELSE { Insts }
    (21) Inst -> . REPEAT { Insts } UNTIL LPAR Log RPAR

    }               shift and go to state 104
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    EXEC            shift and go to state 31
    ID              shift and go to state 30
    IF              shift and go to state 32
    REPEAT          shift and go to state 33

    Inst                           shift and go to state 27

state 103

    (21) Inst -> REPEAT { Insts } UNTIL LPAR . Log RPAR
    (22) Log -> . NOT Log
    (23) Log -> . Log AND FactCond
    (24) Log -> . Log OR FactCond
    (25) Log -> . FactCond
    (26) FactCond -> . FactCond LEQ ExpCond
    (27) FactCond -> . FactCond LES ExpCond
    (28) FactCond -> . FactCond GEQ ExpCond
    (29) FactCond -> . FactCond GRE ExpCond
    (30) FactCond -> . FactCond EQ ExpCond
    (31) FactCond -> . FactCond DIF ExpCond
    (32) FactCond -> . ExpCond
    (33) ExpCond -> . ExpCond ADD TermoCond
    (34) ExpCond -> . ExpCond SUB TermoCond
    (35) ExpCond -> . TermoCond
    (36) TermoCond -> . TermoCond MUL FactorCond
    (37) TermoCond -> . TermoCond DIV FactorCond
    (38) TermoCond -> . TermoCond MOD FactorCond
    (39) TermoCond -> . FactorCond
    (40) FactorCond -> . LPAR Log RPAR
    (41) FactorCond -> . NUM
    (42) FactorCond -> . ID

    NOT             shift and go to state 46
    LPAR            shift and go to state 43
    NUM             shift and go to state 51
    ID              shift and go to state 52

    Log                            shift and go to state 105
    FactCond                       shift and go to state 47
    ExpCond                        shift and go to state 48
    TermoCond                      shift and go to state 49
    FactorCond                     shift and go to state 50

state 104

    (19) Inst -> IF LPAR Log RPAR { Insts } .
    (20) Inst -> IF LPAR Log RPAR { Insts } . ELSE { Insts }

    }               reduce using rule 19 (Inst -> IF LPAR Log RPAR { Insts } .)
    PRINT           reduce using rule 19 (Inst -> IF LPAR Log RPAR { Insts } .)
    READ            reduce using rule 19 (Inst -> IF LPAR Log RPAR { Insts } .)
    EXEC            reduce using rule 19 (Inst -> IF LPAR Log RPAR { Insts } .)
    ID              reduce using rule 19 (Inst -> IF LPAR Log RPAR { Insts } .)
    IF              reduce using rule 19 (Inst -> IF LPAR Log RPAR { Insts } .)
    REPEAT          reduce using rule 19 (Inst -> IF LPAR Log RPAR { Insts } .)
    ELSE            shift and go to state 106


state 105

    (21) Inst -> REPEAT { Insts } UNTIL LPAR Log . RPAR
    (23) Log -> Log . AND FactCond
    (24) Log -> Log . OR FactCond

    RPAR            shift and go to state 107
    AND             shift and go to state 62
    OR              shift and go to state 63


state 106

    (20) Inst -> IF LPAR Log RPAR { Insts } ELSE . { Insts }

    {               shift and go to state 108


state 107

    (21) Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .

    }               reduce using rule 21 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    PRINT           reduce using rule 21 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    READ            reduce using rule 21 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    EXEC            reduce using rule 21 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    ID              reduce using rule 21 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    IF              reduce using rule 21 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)
    REPEAT          reduce using rule 21 (Inst -> REPEAT { Insts } UNTIL LPAR Log RPAR .)


state 108

    (20) Inst -> IF LPAR Log RPAR { Insts } ELSE { . Insts }
    (12) Insts -> . Insts Inst
    (13) Insts -> .

    }               reduce using rule 13 (Insts -> .)
    PRINT           reduce using rule 13 (Insts -> .)
    READ            reduce using rule 13 (Insts -> .)
    EXEC            reduce using rule 13 (Insts -> .)
    ID              reduce using rule 13 (Insts -> .)
    IF              reduce using rule 13 (Insts -> .)
    REPEAT          reduce using rule 13 (Insts -> .)

    Insts                          shift and go to state 109

state 109

    (20) Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts . }
    (12) Insts -> Insts . Inst
    (14) Inst -> . PRINT LPAR STRING RPAR ;
    (15) Inst -> . PRINT LPAR Log RPAR ;
    (16) Inst -> . READ LPAR ID RPAR ;
    (17) Inst -> . EXEC NAME LPAR RPAR ;
    (18) Inst -> . ID ATRIB ExpCond ;
    (19) Inst -> . IF LPAR Log RPAR { Insts }
    (20) Inst -> . IF LPAR Log RPAR { Insts } ELSE { Insts }
    (21) Inst -> . REPEAT { Insts } UNTIL LPAR Log RPAR

    }               shift and go to state 110
    PRINT           shift and go to state 28
    READ            shift and go to state 29
    EXEC            shift and go to state 31
    ID              shift and go to state 30
    IF              shift and go to state 32
    REPEAT          shift and go to state 33

    Inst                           shift and go to state 27

state 110

    (20) Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .

    }               reduce using rule 20 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    PRINT           reduce using rule 20 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    READ            reduce using rule 20 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    EXEC            reduce using rule 20 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    ID              reduce using rule 20 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    IF              reduce using rule 20 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)
    REPEAT          reduce using rule 20 (Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
