
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD AND ATRIB DECL DIF DIV ELSE EQ FUNC GEQ GRE ID IF INST INT LEQ LES LPAR MAIN MOD MUL NAME NOT NUM OR PRINT READ REPEAT RPAR SUB UNTILPrograma : Main FuncoesMain : FUNC MAIN '{' Declaracoes Instrucoes '}'Funcoes : Funcoes FuncaoFuncoes : Funcao : FUNC NAME '{' Instrucoes '}'Declaracoes : DECL '{' Decls '}'Decls : Decls DeclDecls : Decl : INT ID ';'Decl : INT ID ATRIB ExpCond ';'Instrucoes : INST '{' Insts '}'Insts : Insts InstInsts : Inst : PRINT LPAR Log RPAR ';'Inst : READ LPAR ID RPAR ';'Inst : ID ATRIB ExpCond ';'Inst : IF LPAR Log RPAR '{' Insts '}'Inst : IF LPAR Log RPAR '{' Insts '}' ELSE '{' Insts '}'Log : NOT LogLog : Log AND FactCondLog : Log OR FactCondLog : FactCondFactCond : FactCond LEQ ExpCondFactCond : FactCond LES ExpCondFactCond : FactCond GEQ ExpCondFactCond : FactCond GRE ExpCondFactCond : FactCond EQ ExpCondFactCond : FactCond DIF ExpCondFactCond : ExpCondExpCond : ExpCond ADD TermoCondExpCond : ExpCond SUB TermoCondExpCond : TermoCondTermoCond : TermoCond MUL FactorCondTermoCond : TermoCond DIV FactorCondTermoCond : TermoCond MOD FactorCondTermoCond : FactorCondFactorCond : LPAR Log RPARFactorCond : NUMFactorCond : ID"
    
_lr_action_items = {'FUNC':([0,2,4,6,17,20,],[3,-4,7,-3,-2,-5,]),'$end':([1,2,4,6,17,20,],[0,-4,-1,-3,-2,-5,]),'MAIN':([3,],[5,]),'{':([5,9,11,14,69,90,],[8,12,15,18,87,91,]),'NAME':([7,],[9,]),'DECL':([8,],[11,]),'INST':([10,12,22,],[14,14,-6,]),'}':([13,15,16,18,19,21,23,25,26,36,68,70,72,86,87,88,89,91,92,93,],[17,-8,20,-13,22,25,-7,-11,-12,-9,-16,-10,-14,-15,-13,89,-17,-13,93,-18,]),'INT':([15,19,23,36,70,],[-8,24,-7,-9,-10,]),'PRINT':([18,21,26,68,72,86,87,88,89,91,92,93,],[-13,27,-12,-16,-14,-15,-13,27,-17,-13,27,-18,]),'READ':([18,21,26,68,72,86,87,88,89,91,92,93,],[-13,28,-12,-16,-14,-15,-13,28,-17,-13,28,-18,]),'ID':([18,21,24,26,32,33,34,35,37,38,40,53,54,56,57,58,59,60,61,62,63,64,65,66,68,72,86,87,88,89,91,92,93,],[-13,29,31,-12,46,47,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-16,-14,-15,-13,29,-17,-13,29,-18,]),'IF':([18,21,26,68,72,86,87,88,89,91,92,93,],[-13,30,-12,-16,-14,-15,-13,30,-17,-13,30,-18,]),'LPAR':([27,28,30,32,34,35,37,38,40,53,54,56,57,58,59,60,61,62,63,64,65,66,],[32,33,35,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'ATRIB':([29,31,],[34,37,]),';':([31,43,44,45,46,48,50,52,67,71,81,82,83,84,85,],[36,-32,-36,-38,-39,68,70,72,86,-37,-30,-31,-33,-34,-35,]),'NOT':([32,35,38,40,],[40,40,40,40,]),'NUM':([32,34,35,37,38,40,53,54,56,57,58,59,60,61,62,63,64,65,66,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'RPAR':([39,41,42,43,44,45,46,47,49,51,55,71,73,74,75,76,77,78,79,80,81,82,83,84,85,],[52,-22,-29,-32,-36,-38,-39,67,69,71,-19,-37,-20,-21,-23,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,]),'AND':([39,41,42,43,44,45,46,49,51,55,71,73,74,75,76,77,78,79,80,81,82,83,84,85,],[53,-22,-29,-32,-36,-38,-39,53,53,53,-37,-20,-21,-23,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,]),'OR':([39,41,42,43,44,45,46,49,51,55,71,73,74,75,76,77,78,79,80,81,82,83,84,85,],[54,-22,-29,-32,-36,-38,-39,54,54,54,-37,-20,-21,-23,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,]),'LEQ':([41,42,43,44,45,46,71,73,74,75,76,77,78,79,80,81,82,83,84,85,],[56,-29,-32,-36,-38,-39,-37,56,56,-23,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,]),'LES':([41,42,43,44,45,46,71,73,74,75,76,77,78,79,80,81,82,83,84,85,],[57,-29,-32,-36,-38,-39,-37,57,57,-23,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,]),'GEQ':([41,42,43,44,45,46,71,73,74,75,76,77,78,79,80,81,82,83,84,85,],[58,-29,-32,-36,-38,-39,-37,58,58,-23,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,]),'GRE':([41,42,43,44,45,46,71,73,74,75,76,77,78,79,80,81,82,83,84,85,],[59,-29,-32,-36,-38,-39,-37,59,59,-23,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,]),'EQ':([41,42,43,44,45,46,71,73,74,75,76,77,78,79,80,81,82,83,84,85,],[60,-29,-32,-36,-38,-39,-37,60,60,-23,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,]),'DIF':([41,42,43,44,45,46,71,73,74,75,76,77,78,79,80,81,82,83,84,85,],[61,-29,-32,-36,-38,-39,-37,61,61,-23,-24,-25,-26,-27,-28,-30,-31,-33,-34,-35,]),'ADD':([42,43,44,45,46,48,50,71,75,76,77,78,79,80,81,82,83,84,85,],[62,-32,-36,-38,-39,62,62,-37,62,62,62,62,62,62,-30,-31,-33,-34,-35,]),'SUB':([42,43,44,45,46,48,50,71,75,76,77,78,79,80,81,82,83,84,85,],[63,-32,-36,-38,-39,63,63,-37,63,63,63,63,63,63,-30,-31,-33,-34,-35,]),'MUL':([43,44,45,46,71,81,82,83,84,85,],[64,-36,-38,-39,-37,64,64,-33,-34,-35,]),'DIV':([43,44,45,46,71,81,82,83,84,85,],[65,-36,-38,-39,-37,65,65,-33,-34,-35,]),'MOD':([43,44,45,46,71,81,82,83,84,85,],[66,-36,-38,-39,-37,66,66,-33,-34,-35,]),'ELSE':([89,],[90,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Main':([0,],[2,]),'Funcoes':([2,],[4,]),'Funcao':([4,],[6,]),'Declaracoes':([8,],[10,]),'Instrucoes':([10,12,],[13,16,]),'Decls':([15,],[19,]),'Insts':([18,87,91,],[21,88,92,]),'Decl':([19,],[23,]),'Inst':([21,88,92,],[26,26,26,]),'Log':([32,35,38,40,],[39,49,51,55,]),'FactCond':([32,35,38,40,53,54,],[41,41,41,41,73,74,]),'ExpCond':([32,34,35,37,38,40,53,54,56,57,58,59,60,61,],[42,48,42,50,42,42,42,42,75,76,77,78,79,80,]),'TermoCond':([32,34,35,37,38,40,53,54,56,57,58,59,60,61,62,63,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,81,82,]),'FactorCond':([32,34,35,37,38,40,53,54,56,57,58,59,60,61,62,63,64,65,66,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,83,84,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> Main Funcoes','Programa',2,'p_Programa','comp_yacc.py',8),
  ('Main -> FUNC MAIN { Declaracoes Instrucoes }','Main',6,'p_Main','comp_yacc.py',12),
  ('Funcoes -> Funcoes Funcao','Funcoes',2,'p_Funcoes','comp_yacc.py',16),
  ('Funcoes -> <empty>','Funcoes',0,'p_Funcoes_Null','comp_yacc.py',20),
  ('Funcao -> FUNC NAME { Instrucoes }','Funcao',5,'p_Funcao','comp_yacc.py',24),
  ('Declaracoes -> DECL { Decls }','Declaracoes',4,'p_Declaracoes','comp_yacc.py',28),
  ('Decls -> Decls Decl','Decls',2,'p_Decls','comp_yacc.py',32),
  ('Decls -> <empty>','Decls',0,'p_DeclsNull','comp_yacc.py',36),
  ('Decl -> INT ID ;','Decl',3,'p_Decl_ID','comp_yacc.py',40),
  ('Decl -> INT ID ATRIB ExpCond ;','Decl',5,'p_Decl_ATRIB','comp_yacc.py',46),
  ('Instrucoes -> INST { Insts }','Instrucoes',4,'p_Instrucoes','comp_yacc.py',52),
  ('Insts -> Insts Inst','Insts',2,'p_Insts','comp_yacc.py',56),
  ('Insts -> <empty>','Insts',0,'p_InstsNull','comp_yacc.py',61),
  ('Inst -> PRINT LPAR Log RPAR ;','Inst',5,'p_Inst_Print','comp_yacc.py',66),
  ('Inst -> READ LPAR ID RPAR ;','Inst',5,'p_Inst_Read','comp_yacc.py',71),
  ('Inst -> ID ATRIB ExpCond ;','Inst',4,'p_Inst_Atrib','comp_yacc.py',76),
  ('Inst -> IF LPAR Log RPAR { Insts }','Inst',7,'p_Inst_If','comp_yacc.py',80),
  ('Inst -> IF LPAR Log RPAR { Insts } ELSE { Insts }','Inst',11,'p_Inst_ifelse','comp_yacc.py',85),
  ('Log -> NOT Log','Log',2,'p_Log_not','comp_yacc.py',90),
  ('Log -> Log AND FactCond','Log',3,'p_Log_and','comp_yacc.py',94),
  ('Log -> Log OR FactCond','Log',3,'p_Log_or','comp_yacc.py',98),
  ('Log -> FactCond','Log',1,'p_Log_factcond','comp_yacc.py',102),
  ('FactCond -> FactCond LEQ ExpCond','FactCond',3,'p_FactCond_leq','comp_yacc.py',106),
  ('FactCond -> FactCond LES ExpCond','FactCond',3,'p_FactCond_les','comp_yacc.py',110),
  ('FactCond -> FactCond GEQ ExpCond','FactCond',3,'p_FactCond_geq','comp_yacc.py',114),
  ('FactCond -> FactCond GRE ExpCond','FactCond',3,'p_FactCond_gre','comp_yacc.py',118),
  ('FactCond -> FactCond EQ ExpCond','FactCond',3,'p_FactCond_eq','comp_yacc.py',122),
  ('FactCond -> FactCond DIF ExpCond','FactCond',3,'p_FactCond_dif','comp_yacc.py',126),
  ('FactCond -> ExpCond','FactCond',1,'p_FactCond_expcond','comp_yacc.py',130),
  ('ExpCond -> ExpCond ADD TermoCond','ExpCond',3,'p_ExpCond_add','comp_yacc.py',134),
  ('ExpCond -> ExpCond SUB TermoCond','ExpCond',3,'p_ExpCond_sub','comp_yacc.py',138),
  ('ExpCond -> TermoCond','ExpCond',1,'p_ExpCond_termo','comp_yacc.py',142),
  ('TermoCond -> TermoCond MUL FactorCond','TermoCond',3,'p_TermoCond_mult','comp_yacc.py',146),
  ('TermoCond -> TermoCond DIV FactorCond','TermoCond',3,'p_TermoCond_div','comp_yacc.py',150),
  ('TermoCond -> TermoCond MOD FactorCond','TermoCond',3,'p_TermoCond_mod','comp_yacc.py',157),
  ('TermoCond -> FactorCond','TermoCond',1,'p_TermoCond_fator','comp_yacc.py',164),
  ('FactorCond -> LPAR Log RPAR','FactorCond',3,'p_FactorCond_par','comp_yacc.py',168),
  ('FactorCond -> NUM','FactorCond',1,'p_FactorCond_num','comp_yacc.py',172),
  ('FactorCond -> ID','FactorCond',1,'p_FactorCond_id','comp_yacc.py',176),
]
