
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD AND ATRIB DECL DIF DIV ELSE EQ FUNC GEQ GRE ID IF INST INT LEQ LES MAIN MOD MUL NAME NOT NUM OR PRINT READ REPEAT SUB UNTILPrograma : Main FuncoesMain : FUNC MAIN '{' Declaracoes Instrucoes '}'Funcoes : Funcoes FuncaoFuncoes : Funcao : FUNC NAME '{' Instrucoes '}'Declaracoes : DECL '{' Decls '}'Decls : Decls DeclDecls : Decl : INT ID ';'Decl : INT ID ATRIB ExpCond ';'Instrucoes : INST '{' Insts '}'Insts : Insts InstInsts : Inst : PRINT '(' Log ')' ';'Inst : READ '(' ID ')' ';'Inst : ID ATRIB ExpCond ';'Log : NOT LogLog : Log AND FactCondLog : Log OR FactCondLog : FactCondFactCond : FactCond LEQ ExpCondFactCond : FactCond LES ExpCondFactCond : FactCond GEQ ExpCondFactCond : FactCond GRE ExpCondFactCond : FactCond EQ ExpCondFactCond : FactCond DIF ExpCondFactCond : ExpCondExpCond : ExpCond ADD TermoCondExpCond : ExpCond SUB TermoCondExpCond : TermoCondTermoCond : TermoCond MUL FactorCondTermoCond : TermoCond DIV FactorCondTermoCond : TermoCond MOD FactorCondTermoCond : FactorCondFactorCond : '(' Log ')'FactorCond : NUMFactorCond : ID"
    
_lr_action_items = {'FUNC':([0,2,4,6,17,20,],[3,-4,7,-3,-2,-5,]),'$end':([1,2,4,6,17,20,],[0,-4,-1,-3,-2,-5,]),'MAIN':([3,],[5,]),'{':([5,9,11,14,],[8,12,15,18,]),'NAME':([7,],[9,]),'DECL':([8,],[11,]),'INST':([10,12,22,],[14,14,-6,]),'}':([13,15,16,18,19,21,23,25,26,34,65,66,68,82,],[17,-8,20,-13,22,25,-7,-11,-12,-9,-16,-10,-14,-15,]),'INT':([15,19,23,34,66,],[-8,24,-7,-9,-10,]),'PRINT':([18,21,26,65,68,82,],[-13,27,-12,-16,-14,-15,]),'READ':([18,21,26,65,68,82,],[-13,28,-12,-16,-14,-15,]),'ID':([18,21,24,26,31,32,33,35,36,38,50,51,53,54,55,56,57,58,59,60,61,62,63,65,68,82,],[-13,29,30,-12,44,45,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-16,-14,-15,]),'(':([27,28,31,33,35,36,38,50,51,53,54,55,56,57,58,59,60,61,62,63,],[31,32,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'ATRIB':([29,30,],[33,35,]),';':([30,41,42,43,44,46,47,49,64,67,77,78,79,80,81,],[34,-30,-34,-36,-37,65,66,68,82,-35,-28,-29,-31,-32,-33,]),'NOT':([31,36,38,],[38,38,38,]),'NUM':([31,33,35,36,38,50,51,53,54,55,56,57,58,59,60,61,62,63,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),')':([37,39,40,41,42,43,44,45,48,52,67,69,70,71,72,73,74,75,76,77,78,79,80,81,],[49,-20,-27,-30,-34,-36,-37,64,67,-17,-35,-18,-19,-21,-22,-23,-24,-25,-26,-28,-29,-31,-32,-33,]),'AND':([37,39,40,41,42,43,44,48,52,67,69,70,71,72,73,74,75,76,77,78,79,80,81,],[50,-20,-27,-30,-34,-36,-37,50,50,-35,-18,-19,-21,-22,-23,-24,-25,-26,-28,-29,-31,-32,-33,]),'OR':([37,39,40,41,42,43,44,48,52,67,69,70,71,72,73,74,75,76,77,78,79,80,81,],[51,-20,-27,-30,-34,-36,-37,51,51,-35,-18,-19,-21,-22,-23,-24,-25,-26,-28,-29,-31,-32,-33,]),'LEQ':([39,40,41,42,43,44,67,69,70,71,72,73,74,75,76,77,78,79,80,81,],[53,-27,-30,-34,-36,-37,-35,53,53,-21,-22,-23,-24,-25,-26,-28,-29,-31,-32,-33,]),'LES':([39,40,41,42,43,44,67,69,70,71,72,73,74,75,76,77,78,79,80,81,],[54,-27,-30,-34,-36,-37,-35,54,54,-21,-22,-23,-24,-25,-26,-28,-29,-31,-32,-33,]),'GEQ':([39,40,41,42,43,44,67,69,70,71,72,73,74,75,76,77,78,79,80,81,],[55,-27,-30,-34,-36,-37,-35,55,55,-21,-22,-23,-24,-25,-26,-28,-29,-31,-32,-33,]),'GRE':([39,40,41,42,43,44,67,69,70,71,72,73,74,75,76,77,78,79,80,81,],[56,-27,-30,-34,-36,-37,-35,56,56,-21,-22,-23,-24,-25,-26,-28,-29,-31,-32,-33,]),'EQ':([39,40,41,42,43,44,67,69,70,71,72,73,74,75,76,77,78,79,80,81,],[57,-27,-30,-34,-36,-37,-35,57,57,-21,-22,-23,-24,-25,-26,-28,-29,-31,-32,-33,]),'DIF':([39,40,41,42,43,44,67,69,70,71,72,73,74,75,76,77,78,79,80,81,],[58,-27,-30,-34,-36,-37,-35,58,58,-21,-22,-23,-24,-25,-26,-28,-29,-31,-32,-33,]),'ADD':([40,41,42,43,44,46,47,67,71,72,73,74,75,76,77,78,79,80,81,],[59,-30,-34,-36,-37,59,59,-35,59,59,59,59,59,59,-28,-29,-31,-32,-33,]),'SUB':([40,41,42,43,44,46,47,67,71,72,73,74,75,76,77,78,79,80,81,],[60,-30,-34,-36,-37,60,60,-35,60,60,60,60,60,60,-28,-29,-31,-32,-33,]),'MUL':([41,42,43,44,67,77,78,79,80,81,],[61,-34,-36,-37,-35,61,61,-31,-32,-33,]),'DIV':([41,42,43,44,67,77,78,79,80,81,],[62,-34,-36,-37,-35,62,62,-31,-32,-33,]),'MOD':([41,42,43,44,67,77,78,79,80,81,],[63,-34,-36,-37,-35,63,63,-31,-32,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Main':([0,],[2,]),'Funcoes':([2,],[4,]),'Funcao':([4,],[6,]),'Declaracoes':([8,],[10,]),'Instrucoes':([10,12,],[13,16,]),'Decls':([15,],[19,]),'Insts':([18,],[21,]),'Decl':([19,],[23,]),'Inst':([21,],[26,]),'Log':([31,36,38,],[37,48,52,]),'FactCond':([31,36,38,50,51,],[39,39,39,69,70,]),'ExpCond':([31,33,35,36,38,50,51,53,54,55,56,57,58,],[40,46,47,40,40,40,40,71,72,73,74,75,76,]),'TermoCond':([31,33,35,36,38,50,51,53,54,55,56,57,58,59,60,],[41,41,41,41,41,41,41,41,41,41,41,41,41,77,78,]),'FactorCond':([31,33,35,36,38,50,51,53,54,55,56,57,58,59,60,61,62,63,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,79,80,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> Main Funcoes','Programa',2,'p_Programa','comp_yacc.py',8),
  ('Main -> FUNC MAIN { Declaracoes Instrucoes }','Main',6,'p_Main','comp_yacc.py',12),
  ('Funcoes -> Funcoes Funcao','Funcoes',2,'p_Funcoes','comp_yacc.py',16),
  ('Funcoes -> <empty>','Funcoes',0,'p_Funcoes_Null','comp_yacc.py',20),
  ('Funcao -> FUNC NAME { Instrucoes }','Funcao',5,'p_Funcao','comp_yacc.py',24),
  ('Declaracoes -> DECL { Decls }','Declaracoes',4,'p_Declaracoes','comp_yacc.py',28),
  ('Decls -> Decls Decl','Decls',2,'p_Decls','comp_yacc.py',32),
  ('Decls -> <empty>','Decls',0,'p_DeclsNull','comp_yacc.py',36),
  ('Decl -> INT ID ;','Decl',3,'p_Decl_ID','comp_yacc.py',40),
  ('Decl -> INT ID ATRIB ExpCond ;','Decl',5,'p_Decl_ATRIB','comp_yacc.py',46),
  ('Instrucoes -> INST { Insts }','Instrucoes',4,'p_Instrucoes','comp_yacc.py',52),
  ('Insts -> Insts Inst','Insts',2,'p_Insts','comp_yacc.py',56),
  ('Insts -> <empty>','Insts',0,'p_InstsNull','comp_yacc.py',61),
  ('Inst -> PRINT ( Log ) ;','Inst',5,'p_InstPrint','comp_yacc.py',66),
  ('Inst -> READ ( ID ) ;','Inst',5,'p_InstRead','comp_yacc.py',71),
  ('Inst -> ID ATRIB ExpCond ;','Inst',4,'p_InstAtrib','comp_yacc.py',76),
  ('Log -> NOT Log','Log',2,'p_Log_not','comp_yacc.py',87),
  ('Log -> Log AND FactCond','Log',3,'p_Log_and','comp_yacc.py',91),
  ('Log -> Log OR FactCond','Log',3,'p_Log_or','comp_yacc.py',95),
  ('Log -> FactCond','Log',1,'p_Log_factcond','comp_yacc.py',99),
  ('FactCond -> FactCond LEQ ExpCond','FactCond',3,'p_FactCond_leq','comp_yacc.py',103),
  ('FactCond -> FactCond LES ExpCond','FactCond',3,'p_FactCond_les','comp_yacc.py',107),
  ('FactCond -> FactCond GEQ ExpCond','FactCond',3,'p_FactCond_geq','comp_yacc.py',111),
  ('FactCond -> FactCond GRE ExpCond','FactCond',3,'p_FactCond_gre','comp_yacc.py',115),
  ('FactCond -> FactCond EQ ExpCond','FactCond',3,'p_FactCond_eq','comp_yacc.py',119),
  ('FactCond -> FactCond DIF ExpCond','FactCond',3,'p_FactCond_dif','comp_yacc.py',123),
  ('FactCond -> ExpCond','FactCond',1,'p_FactCond_expcond','comp_yacc.py',127),
  ('ExpCond -> ExpCond ADD TermoCond','ExpCond',3,'p_ExpCond_add','comp_yacc.py',131),
  ('ExpCond -> ExpCond SUB TermoCond','ExpCond',3,'p_ExpCond_sub','comp_yacc.py',135),
  ('ExpCond -> TermoCond','ExpCond',1,'p_ExpCond_termo','comp_yacc.py',139),
  ('TermoCond -> TermoCond MUL FactorCond','TermoCond',3,'p_TermoCond_mult','comp_yacc.py',143),
  ('TermoCond -> TermoCond DIV FactorCond','TermoCond',3,'p_TermoCond_div','comp_yacc.py',147),
  ('TermoCond -> TermoCond MOD FactorCond','TermoCond',3,'p_TermoCond_mod','comp_yacc.py',154),
  ('TermoCond -> FactorCond','TermoCond',1,'p_TermoCond_fator','comp_yacc.py',161),
  ('FactorCond -> ( Log )','FactorCond',3,'p_FactorCond_par','comp_yacc.py',165),
  ('FactorCond -> NUM','FactorCond',1,'p_FactorCond_num','comp_yacc.py',169),
  ('FactorCond -> ID','FactorCond',1,'p_FactorCond_id','comp_yacc.py',173),
]
